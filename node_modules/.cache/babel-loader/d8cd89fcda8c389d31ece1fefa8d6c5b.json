{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMva2FpdXJiYW4vUHJvamVrdGUvb3duX3Byb2plY3RzL3Z1ZS13ZWJzaXRlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9rYWl1cmJhbi9Qcm9qZWt0ZS9vd25fcHJvamVjdHMvdnVlLXdlYnNpdGUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc2V0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1kQ29tcG9uZW50IGZyb20gJ2NvcmUvTWRDb21wb25lbnQnOwppbXBvcnQgTWRQcm9wVmFsaWRhdG9yIGZyb20gJ2NvcmUvdXRpbHMvTWRQcm9wVmFsaWRhdG9yJzsKdmFyIE1kUHJvZ3Jlc3NTcGlubmVyID0gewogIHN0eWxlVGFnOiBudWxsLAogIGRpYW1ldGVyczogbmV3IFNldCgpCn07CmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kUHJvZ3Jlc3NTcGlubmVyJywKICBwcm9wczogewogICAgbWRWYWx1ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBtZERpYW1ldGVyOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNjAKICAgIH0sCiAgICBtZFN0cm9rZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDYKICAgIH0sCiAgICBtZE1vZGU6IF9vYmplY3RTcHJlYWQoewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdkZXRlcm1pbmF0ZScKICAgIH0sIE1kUHJvcFZhbGlkYXRvcignbWQtbW9kZScsIFsnZGV0ZXJtaW5hdGUnLCAnaW5kZXRlcm1pbmF0ZSddKSkKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0RldGVybWluYXRlOiBmdW5jdGlvbiBpc0RldGVybWluYXRlKCkgewogICAgICByZXR1cm4gdGhpcy5tZE1vZGUgPT09ICdkZXRlcm1pbmF0ZSc7CiAgICB9LAogICAgaXNJbmRldGVybWluYXRlOiBmdW5jdGlvbiBpc0luZGV0ZXJtaW5hdGUoKSB7CiAgICAgIHJldHVybiB0aGlzLm1kTW9kZSA9PT0gJ2luZGV0ZXJtaW5hdGUnOwogICAgfSwKICAgIGlzSUU6IGZ1bmN0aW9uIGlzSUUoKSB7CiAgICAgIGlmICghdGhpcy4kaXNTZXJ2ZXIpIHsKICAgICAgICByZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCd0cmlkZW50Jyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBwcm9ncmVzc0NsYXNzZXM6IGZ1bmN0aW9uIHByb2dyZXNzQ2xhc3NlcygpIHsKICAgICAgdmFyIF9yZWY7CgogICAgICB2YXIgYW5pbWF0aW9uQ2xhc3MgPSAnbWQtcHJvZ3Jlc3Mtc3Bpbm5lci1pbmRldGVybWluYXRlJzsKCiAgICAgIGlmICh0aGlzLmlzSUUpIHsKICAgICAgICBhbmltYXRpb25DbGFzcyArPSAnLWZhbGxiYWNrJzsKICAgICAgfQoKICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9yZWYsIGFuaW1hdGlvbkNsYXNzLCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9yZWYsICdtZC0nICsgdGhpcy5tZE1vZGUsIHRydWUpLCBfcmVmOwogICAgfSwKICAgIGNpcmNsZVJhZGl1czogZnVuY3Rpb24gY2lyY2xlUmFkaXVzKCkgewogICAgICByZXR1cm4gKHRoaXMubWREaWFtZXRlciAtIHRoaXMubWRTdHJva2UpIC8gMjsKICAgIH0sCiAgICBjaXJjbGVTdHJva2VXaWR0aDogZnVuY3Rpb24gY2lyY2xlU3Ryb2tlV2lkdGgoKSB7CiAgICAgIHJldHVybiB0aGlzLm1kU3Ryb2tlICsgJ3B4JzsKICAgIH0sCiAgICBjaXJjbGVDaXJjdW1mZXJlbmNlOiBmdW5jdGlvbiBjaXJjbGVDaXJjdW1mZXJlbmNlKCkgewogICAgICByZXR1cm4gMiAqIE1hdGguUEkgKiB0aGlzLmNpcmNsZVJhZGl1czsKICAgIH0sCiAgICBjaXJjbGVTdHJva2VEYXNoQXJyYXk6IGZ1bmN0aW9uIGNpcmNsZVN0cm9rZURhc2hBcnJheSgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2lyY2xlQ2lyY3VtZmVyZW5jZSArICdweCc7CiAgICB9LAogICAgY2lyY2xlU3Ryb2tlRGFzaE9mZnNldDogZnVuY3Rpb24gY2lyY2xlU3Ryb2tlRGFzaE9mZnNldCgpIHsKICAgICAgaWYgKHRoaXMuaXNEZXRlcm1pbmF0ZSkgewogICAgICAgIHJldHVybiB0aGlzLmNpcmNsZUNpcmN1bWZlcmVuY2UgKiAoMTAwIC0gdGhpcy5tZFZhbHVlKSAvIDEwMCArICdweCc7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlzSW5kZXRlcm1pbmF0ZSAmJiB0aGlzLmlzSUUpIHsKICAgICAgICByZXR1cm4gdGhpcy5jaXJjbGVDaXJjdW1mZXJlbmNlICogMC4yICsgJ3B4JzsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbWRWYWx1ZTogZnVuY3Rpb24gbWRWYWx1ZSgpIHsKICAgICAgdGhpcy5hdHRhY2hDaXJjbGVTdHlsZSgpOwogICAgfSwKICAgIG1kRGlhbWV0ZXI6IGZ1bmN0aW9uIG1kRGlhbWV0ZXIoKSB7CiAgICAgIHRoaXMuYXR0YWNoU3ZnU3R5bGUoKTsKICAgICAgdGhpcy5hdHRhY2hDaXJjbGVTdHlsZSgpOwogICAgfSwKICAgIG1kU3Ryb2tlOiBmdW5jdGlvbiBtZFN0cm9rZSgpIHsKICAgICAgdGhpcy5hdHRhY2hDaXJjbGVTdHlsZSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXR0YWNoU3ZnU3R5bGU6IGZ1bmN0aW9uIGF0dGFjaFN2Z1N0eWxlKCkgewogICAgICB2YXIgc3ZnID0gdGhpcy4kcmVmc1snbWQtcHJvZ3Jlc3Mtc3Bpbm5lci1kcmF3J107CiAgICAgIHZhciBzaXplID0gIiIuY29uY2F0KHRoaXMubWREaWFtZXRlciwgInB4Iik7CiAgICAgIHN2Zy5zdHlsZS53aWR0aCA9IHNpemU7CiAgICAgIHN2Zy5zdHlsZS5oZWlnaHQgPSBzaXplOwogICAgfSwKICAgIGF0dGFjaENpcmNsZVN0eWxlOiBmdW5jdGlvbiBhdHRhY2hDaXJjbGVTdHlsZSgpIHsKICAgICAgdmFyIGNpcmNsZSA9IHRoaXMuJHJlZnNbJ21kLXByb2dyZXNzLXNwaW5uZXItY2lyY2xlJ107CiAgICAgIGNpcmNsZS5zdHlsZS5zdHJva2VEYXNob2Zmc2V0ID0gdGhpcy5jaXJjbGVTdHJva2VEYXNoT2Zmc2V0OwogICAgICBjaXJjbGUuc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gdGhpcy5jaXJjbGVTdHJva2VEYXNoQXJyYXk7CiAgICAgIGNpcmNsZS5zdHlsZS5zdHJva2VXaWR0aCA9IHRoaXMuY2lyY2xlU3Ryb2tlV2lkdGg7CiAgICAgIGNpcmNsZS5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1tZC1wcm9ncmVzcy1zcGlubmVyLXN0YXJ0LXZhbHVlJywgMC45NSAqIHRoaXMuY2lyY2xlQ2lyY3VtZmVyZW5jZSk7CiAgICAgIGNpcmNsZS5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1tZC1wcm9ncmVzcy1zcGlubmVyLWVuZC12YWx1ZScsIDAuMiAqIHRoaXMuY2lyY2xlQ2lyY3VtZmVyZW5jZSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5hdHRhY2hTdmdTdHlsZSgpOwogICAgdGhpcy5hdHRhY2hDaXJjbGVTdHlsZSgpOwogIH0KfSk7"},{"version":3,"sources":["MdProgressSpinner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <transition name=\"md-progress-spinner\" appear>\n    <div class=\"md-progress-spinner\" :class=\"[progressClasses, $mdActiveTheme]\">\n      <svg\n        class=\"md-progress-spinner-draw\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        :viewBox=\"`0 0 ${mdDiameter} ${mdDiameter}`\"\n        ref=\"md-progress-spinner-draw\">\n        <circle class=\"md-progress-spinner-circle\" cx=\"50%\" cy=\"50%\" :r=\"circleRadius\" ref=\"md-progress-spinner-circle\"></circle>\n      </svg>\n    </div>\n  </transition>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  const MdProgressSpinner = {\n    styleTag: null,\n    diameters: new Set()\n  }\n\n  export default new MdComponent({\n    name: 'MdProgressSpinner',\n    props: {\n      mdValue: {\n        type: Number,\n        default: 0\n      },\n      mdDiameter: {\n        type: Number,\n        default: 60\n      },\n      mdStroke: {\n        type: Number,\n        default: 6\n      },\n      mdMode: {\n        type: String,\n        default: 'determinate',\n        ...MdPropValidator('md-mode', [\n          'determinate',\n          'indeterminate'\n        ])\n      }\n    },\n    computed: {\n      isDeterminate () {\n        return this.mdMode === 'determinate'\n      },\n      isIndeterminate () {\n        return this.mdMode === 'indeterminate'\n      },\n      isIE () {\n        if (!this.$isServer) {\n          return navigator.userAgent.toLowerCase().includes('trident')\n        }\n        return false\n      },\n      progressClasses () {\n        let animationClass = 'md-progress-spinner-indeterminate'\n\n        if (this.isIE) {\n          animationClass += '-fallback'\n        }\n\n        return {\n          [animationClass]: true,\n          ['md-' + this.mdMode]: true\n        }\n      },\n      circleRadius () {\n        return (this.mdDiameter - this.mdStroke) / 2\n      },\n      circleStrokeWidth () {\n        return this.mdStroke + 'px'\n      },\n      circleCircumference () {\n        return 2 * Math.PI * this.circleRadius\n      },\n      circleStrokeDashArray () {\n        return this.circleCircumference + 'px'\n      },\n      circleStrokeDashOffset () {\n        if (this.isDeterminate) {\n          return this.circleCircumference * (100 - this.mdValue) / 100 + 'px'\n        }\n\n        if (this.isIndeterminate && this.isIE) {\n          return this.circleCircumference * 0.2 + 'px'\n        }\n\n        return null\n      }\n    },\n    watch: {\n      mdValue () {\n        this.attachCircleStyle()\n      },\n      mdDiameter () {\n        this.attachSvgStyle()\n        this.attachCircleStyle()\n      },\n      mdStroke () {\n        this.attachCircleStyle()\n      }\n    },\n    methods: {\n      attachSvgStyle () {\n        const svg = this.$refs['md-progress-spinner-draw']\n        const size = `${this.mdDiameter}px`\n        svg.style.width = size\n        svg.style.height = size\n      },\n      attachCircleStyle () {\n        const circle = this.$refs['md-progress-spinner-circle']\n        circle.style.strokeDashoffset = this.circleStrokeDashOffset\n        circle.style.strokeDasharray = this.circleStrokeDashArray\n        circle.style.strokeWidth = this.circleStrokeWidth\n        circle.style.setProperty('--md-progress-spinner-start-value', 0.95 * this.circleCircumference)\n        circle.style.setProperty('--md-progress-spinner-end-value', 0.2 * this.circleCircumference)\n      }\n    },\n    mounted () {\n      this.attachSvgStyle()\n      this.attachCircleStyle()\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  @keyframes md-progress-spinner-rotate {\n    0% {\n      transform: rotate(0)\n    }\n\n    100% {\n      transform: rotate(360deg)\n    }\n  }\n\n  @keyframes md-progress-spinner-initial-rotate {\n    0% {\n      opacity: 0;\n      transform: rotate(-90deg) translateZ(0);\n    }\n\n    20% {\n      opacity: 1;\n    }\n\n    100% {\n      transform: rotate(270deg) translateZ(0);\n    }\n  }\n\n  @keyframes md-progress-spinner-stroke-rotate-fallback {\n    0% {\n      transform: rotate(0)\n    }\n    25% {\n      transform: rotate(1170deg)\n    }\n    50% {\n      transform: rotate(2340deg)\n    }\n    75% {\n      transform: rotate(3510deg)\n    }\n    100% {\n      transform: rotate(4680deg)\n    }\n  }\n\n  @keyframes md-progress-spinner-stroke-rotate {\n    0% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(0);\n    }\n\n    12.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(0);\n    }\n\n    12.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25.1% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(270deg);\n    }\n\n    37.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(270deg);\n    }\n\n    37.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50.01% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(180deg);\n    }\n\n    62.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(180deg);\n    }\n\n    62.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75.01% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(90deg);\n    }\n\n    87.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(90deg);\n    }\n\n    87.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n\n    100% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n  }\n\n  .md-progress-spinner {\n    display: inline-flex;\n    position: relative;\n\n    &.md-indeterminate {\n      animation: md-progress-spinner-rotate 2s linear infinite;\n\n      &.md-progress-spinner-enter,\n      &.md-progress-spinner-leave-to {\n        .md-progress-spinner-draw {\n          opacity: 0;\n          transform: scale(.1);\n        }\n      }\n\n      &.md-progress-spinner-enter-active,\n      &.md-progress-spinner-leave-active {\n        transition-duration: .4s;\n        animation: none;\n      }\n\n      .md-progress-spinner-circle {\n        animation: 4s infinite $md-transition-stand-timing;\n        animation-name: md-progress-spinner-stroke-rotate;\n      }\n    }\n\n    &.md-determinate {\n      &.md-progress-spinner-enter-active {\n        transition-duration: 2s;\n\n        .md-progress-spinner-draw {\n          animation: md-progress-spinner-initial-rotate 1.98s $md-transition-stand-timing forwards;\n        }\n      }\n\n      &.md-progress-spinner-leave-active {\n        transition-duration: 2s;\n\n        .md-progress-spinner-draw {\n          animation: md-progress-spinner-initial-rotate reverse 1.98s $md-transition-stand-timing forwards;\n        }\n      }\n\n      .md-progress-spinner-draw {\n        transition: none;\n      }\n    }\n  }\n\n  .md-progress-spinner-draw {\n    overflow: visible;\n    transform: scale(1) rotate(-90deg);\n    transform-origin: center;\n    transition: .4s $md-transition-stand-timing;\n    will-change: opacity, transform;\n  }\n\n  .md-progress-spinner-circle {\n    fill: none;\n    transform-origin: center;\n    transition: stroke-dashoffset .25s $md-transition-stand-timing;\n    will-change: stroke-dashoffset, stroke-dasharray, stroke-width, animation-name, r;\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-material/src/components/MdProgress/MdProgressSpinner"}]}