{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdTable/MdTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdTable/MdTable.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MdTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <md-tag-switcher :md-tag=\"contentTag\" class=\"md-table\">\n    <slot name=\"md-table-toolbar\" />\n\n    <keep-alive>\n      <md-table-alternate-header v-if=\"$scopedSlots['md-table-alternate-header'] && selectedCount\">\n        <slot name=\"md-table-alternate-header\" :count=\"selectedCount\" />\n      </md-table-alternate-header>\n    </keep-alive>\n\n    <div class=\"md-table-fixed-header\" :class=\"headerClasses\" :style=\"headerStyles\" v-if=\"mdFixedHeader\">\n      <div class=\"md-table-fixed-header-container\" ref=\"fixedHeaderContainer\" @scroll=\"setHeaderScroll\">\n        <table :style=\"fixedHeaderTableStyles\">\n          <md-table-thead />\n        </table>\n      </div>\n    </div>\n\n    <md-content class=\"md-table-content md-scrollbar\" :class=\"contentClasses\" :style=\"contentStyles\" @scroll=\"setScroll\">\n      <table ref=\"contentTable\">\n        <md-table-thead :class=\"headerClasses\" v-if=\"!mdFixedHeader && $scopedSlots['md-table-row']\" />\n\n        <tbody v-if=\"!$scopedSlots['md-table-row']\">\n          <slot />\n        </tbody>\n\n        <tbody v-else-if=\"value.length\">\n          <md-table-row-ghost\n            v-for=\"(item, index) in value\"\n            :key=\"getRowId(item, mdModelId)\"\n            :md-id=\"getRowId(item, mdModelId)\"\n            :md-index=\"index\"\n            :md-item=\"item\">\n            <slot name=\"md-table-row\" :item=\"item\" :index=\"index\" />\n          </md-table-row-ghost>\n        </tbody>\n\n        <tbody v-else-if=\"$scopedSlots['md-table-empty-state']\">\n          <tr>\n            <td :colspan=\"headerCount\">\n              <slot name=\"md-table-empty-state\" />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <slot name=\"md-table-pagination\" />\n    </md-content>\n\n    <slot v-if=\"!hasValue && $scopedSlots['md-table-row']\" />\n  </md-tag-switcher>\n</template>\n\n<script>\n  import raf from 'raf'\n\n  import MdTagSwitcher from 'components/MdTagSwitcher/MdTagSwitcher'\n  import MdUuid from 'core/utils/MdUuid'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n  import MdTableThead from './MdTableThead'\n  import MdTableAlternateHeader from './MdTableAlternateHeader'\n  import MdTableRow from './MdTableRow'\n  import MdTableRowGhost from './MdTableRowGhost'\n  import MdTableCellSelection from './MdTableCellSelection'\n  import MdResizeObserver from 'core/utils/MdResizeObserver'\n\n  const getObjectAttribute = (object, key) => {\n    let value = object\n\n    for (const attribute of key.split('.')) {\n      value = value[attribute]\n    }\n\n    return value\n  }\n\n  export default {\n    name: 'MdTable',\n    components: {\n      MdTagSwitcher,\n      MdTableAlternateHeader,\n      MdTableThead,\n      MdTableRow,\n      MdTableRowGhost,\n      MdTableCellSelection\n    },\n    props: {\n      value: [Array, Object],\n      mdModelId: {\n        type: String,\n        default: 'id'\n      },\n      mdCard: Boolean,\n      mdFixedHeader: Boolean,\n      mdHeight: {\n        type: [Number, String],\n        default: 400\n      },\n      mdSort: String,\n      mdSortOrder: {\n        type: String,\n        default: 'asc',\n        ...MdPropValidator('md-sort-order', ['asc', 'desc'])\n      },\n      mdSortFn: {\n        type: Function,\n        default (value) {\n          return value.sort((a, b) => {\n            const sortBy = this.MdTable.sort\n            const aAttr = getObjectAttribute(a, sortBy)\n            const bAttr = getObjectAttribute(b, sortBy)\n            const isAsc = this.MdTable.sortOrder === 'asc'\n            let isNumber = typeof aAttr === 'number'\n\n            if (!aAttr) {\n              return 1\n            }\n\n            if(!bAttr) {\n              return -1\n            }\n\n            if (isNumber) {\n              return isAsc ? (aAttr - bAttr) : (bAttr - aAttr)\n            }\n\n            return isAsc ?\n              aAttr.localeCompare(bAttr) :\n              bAttr.localeCompare(aAttr)\n          })\n        }\n      },\n      mdSelectedValue: {\n        type: [Array, Object]\n      }\n    },\n    data () {\n      return {\n        windowResizeObserver: null,\n        fixedHeaderTableWidth: 0,\n        fixedHeaderPadding: 0,\n        hasContentScroll: false,\n        MdTable: {\n          items: {},\n          sort: null,\n          sortOrder: null,\n          singleSelection: null,\n          selectedItems: [],\n          selectable: [],\n          fixedHeader: null,\n          contentPadding: null,\n          contentEl: null,\n          // computed\n          hasValue: this.hasValue,\n          // methods\n          emitEvent: this.emitEvent,\n          sortTable: this.sortTable,\n          manageItemSelection: this.manageItemSelection,\n          getModel: this.getModel,\n          getModelItem: this.getModelItem,\n          selectingMode: null\n        },\n        itemsUuidMap: new WeakMap()\n      }\n    },\n    computed: {\n      contentTag () {\n        if (this.mdCard) {\n          return 'md-card'\n        }\n\n        return 'md-content'\n      },\n      headerCount () {\n        return Object.keys(this.MdTable.items).length\n      },\n      selectedCount () {\n        return this.MdTable.selectedItems.length\n      },\n      headerStyles () {\n        if (this.mdFixedHeader) {\n          return `padding-right: ${this.fixedHeaderPadding}px`\n        }\n      },\n      hasValue () {\n        return this.value && this.value.length !== 0\n      },\n      headerClasses () {\n        if ((this.mdFixedHeader && this.hasContentScroll) || !this.hasValue) {\n          return 'md-table-fixed-header-active'\n        }\n      },\n      contentStyles () {\n        if (this.mdFixedHeader) {\n          const height = typeof this.mdHeight === 'number'\n            ? `${this.mdHeight}px`\n            : this.mdHeight\n          return `height: ${height};max-height: ${height}`\n        }\n      },\n      contentClasses () {\n        if (this.mdFixedHeader && this.value.length === 0) {\n          return `md-table-empty`\n        }\n      },\n      fixedHeaderTableStyles () {\n        return {\n          width: this.fixedHeaderTableWidth + 'px'\n        }\n      }\n    },\n    provide () {\n      const MdTable = this.MdTable\n\n      return { MdTable }\n    },\n    watch: {\n      mdSort: {\n        immediate: true,\n        handler () {\n          this.MdTable.sort = this.mdSort\n        }\n      },\n      mdSortOrder: {\n        immediate: true,\n        handler () {\n          this.MdTable.sortOrder = this.mdSortOrder\n        }\n      },\n      mdFixedHeader: {\n        immediate: true,\n        handler () {\n          this.MdTable.fixedHeader = this.mdFixedHeader\n        }\n      },\n      hasValue: {\n        immediate: true,\n        handler () {\n          this.MdTable.hasValue = this.hasValue\n        }\n      },\n      'MdTable.selectedItems' (val, old) {\n        let changed = (() => {\n          let isValEmpty = this.isEmpty(val)\n          let isOldEmpty = this.isEmpty(old)\n          let hasValues = isValEmpty && isOldEmpty\n\n          if (hasValues) {\n            return false\n          } else if (!hasValues) {\n            return (val.length !== old.length) ? true : !val.every((item, index) => item == old[index])\n          }\n\n          return true\n        })()\n\n        if (changed) {\n          this.select(val)\n        }\n      },\n      'MdTable.singleSelection' (val, old) {\n        if (val != old) {\n          this.select(val)\n        }\n      },\n      mdSelectedValue () {\n        this.syncSelectedValue()\n      },\n      value () {\n        this.syncSelectedValue()\n        this.setWidth()\n      }\n    },\n    methods: {\n      isEmpty (value) {\n        return !value || value.length === 0\n      },\n      emitEvent (eventName, value) {\n        this.$emit(eventName, value)\n      },\n      getRowId (item, propertyName) {\n        let id = item[propertyName]\n\n        if (id) {\n          return id\n        }\n\n        id = this.itemsUuidMap.get(item)\n\n        if (!id) {\n          id = 'md-row-' + MdUuid()\n          this.itemsUuidMap.set(item, id)\n        }\n\n        return id\n      },\n      setScroll ($event) {\n        raf(() => {\n          if (this.mdFixedHeader) {\n            this.$refs.fixedHeaderContainer.scrollLeft = $event.target.scrollLeft\n          }\n\n          this.hasContentScroll = $event.target.scrollTop > 0\n        })\n      },\n      setHeaderScroll ($event) {\n        raf(() => {\n          this.MdTable.contentEl.scrollLeft = $event.target.scrollLeft\n        })\n      },\n      getContentEl () {\n        return this.$el.querySelector('.md-table-content')\n      },\n      setContentEl () {\n        this.MdTable.contentEl = this.getContentEl()\n      },\n      setHeaderPadding () {\n        this.setContentEl()\n\n        const { contentEl } = this.MdTable\n        const tableEl = contentEl.childNodes[0]\n\n        this.fixedHeaderPadding = contentEl.offsetWidth - tableEl.offsetWidth\n      },\n      getModel () {\n        return this.value\n      },\n      getModelItem (index) {\n        return this.value[index]\n      },\n      manageItemSelection (item) {\n        if (this.MdTable.selectedItems.includes(item)) {\n          this.MdTable.selectedItems = this.MdTable.selectedItems.filter(target => target !== item)\n        } else {\n          this.MdTable.selectedItems = this.MdTable.selectedItems.concat([item])\n        }\n      },\n      sortTable () {\n        if (Array.isArray(this.value)) {\n          this.$emit('input', this.mdSortFn(this.value))\n        }\n      },\n      select (val) {\n        this.$emit('update:mdSelectedValue', val)\n        this.$emit('md-selected', val)\n      },\n      syncSelectedValue () {\n        this.$nextTick().then(() => { // render the table first\n          if (this.MdTable.selectingMode === 'single') {\n            this.MdTable.singleSelection = this.mdSelectedValue\n          } else if (this.MdTable.selectingMode === 'multiple') {\n            this.MdTable.selectedItems = this.mdSelectedValue || []\n          }\n        })\n      },\n      setWidth () {\n        if (this.mdFixedHeader) {\n          this.fixedHeaderTableWidth = this.$refs.contentTable.offsetWidth\n        }\n      }\n    },\n    created () {\n      if (this.mdSort) {\n        this.sortTable()\n      }\n\n      this.syncSelectedValue()\n    },\n    mounted () {\n      this.setContentEl()\n      this.$nextTick().then(this.setWidth)\n\n      if (this.mdFixedHeader) {\n        this.setHeaderPadding()\n        this.windowResizeObserver = new MdResizeObserver(window, this.setWidth)\n      }\n    },\n    beforeDestroy () {\n      if (this.windowResizeObserver) {\n        this.windowResizeObserver.destroy()\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  .md-table {\n    display: flex;\n    flex-flow: column wrap;\n    overflow-x: auto;\n\n    .md-table-fixed-header {\n      position: relative;\n\n      .md-table-fixed-header-container {\n        -webkit-box-flex: 1;\n        flex: 1;\n        overflow-x: auto;\n\n        &::-webkit-scrollbar,\n        &::-webkit-scrollbar-thumb,\n        &::-webkit-scrollbar-button {\n          display: none;\n        }\n      }\n    }\n\n    .md-table-fixed-header-active {\n      border-bottom: 1px solid;\n    }\n\n    .md-table-content {\n      flex: 1;\n      overflow-x: auto;\n      transition: height .3s $md-transition-default-timing;\n    }\n\n    .md-table-empty {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    table {\n      width: 100%;\n      border-spacing: 0;\n      border-collapse: collapse;\n      overflow: hidden;\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-material/src/components/MdTable"}]}