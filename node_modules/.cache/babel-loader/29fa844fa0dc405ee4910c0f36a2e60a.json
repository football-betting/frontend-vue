{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdCard/MdCardMedia/MdCardMediaCover.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdCard/MdCardMedia/MdCardMediaCover.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNZENhcmRNZWRpYUNvdmVyJywKICBwcm9wczogewogICAgbWRUZXh0U2NyaW06IEJvb2xlYW4sCiAgICBtZFNvbGlkOiBCb29sZWFuCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYmFja2Ryb3BCYWNrZ3JvdW5kOiB7fQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb3ZlckNsYXNzZXM6IGZ1bmN0aW9uIGNvdmVyQ2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAnbWQtdGV4dC1zY3JpbSc6IHRoaXMubWRUZXh0U2NyaW0sCiAgICAgICAgJ21kLXNvbGlkJzogdGhpcy5tZFNvbGlkCiAgICAgIH07CiAgICB9LAogICAgY292ZXJTdHlsZXM6IGZ1bmN0aW9uIGNvdmVyU3R5bGVzKCkgewogICAgICByZXR1cm4gewogICAgICAgIGJhY2tncm91bmQ6IHRoaXMuYmFja2Ryb3BCYWNrZ3JvdW5kCiAgICAgIH07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhcHBseVNjcmltQ29sb3I6IGZ1bmN0aW9uIGFwcGx5U2NyaW1Db2xvcihkYXJrbmVzcykgewogICAgICBpZiAodGhpcy4kcmVmcy5iYWNrZHJvcCkgewogICAgICAgIHRoaXMuYmFja2Ryb3BCYWNrZ3JvdW5kID0gImxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMCkgMjAlLCByZ2JhKDAsIDAsIDAsICIuY29uY2F0KGRhcmtuZXNzIC8gMiwgIikgNjYlLCByZ2JhKDAsIDAsIDAsICIpLmNvbmNhdChkYXJrbmVzcywgIikgMTAwJSkiKTsKICAgICAgfQogICAgfSwKICAgIGFwcGx5U29saWRDb2xvcjogZnVuY3Rpb24gYXBwbHlTb2xpZENvbG9yKGRhcmtuZXNzKSB7CiAgICAgIHZhciBhcmVhID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignLm1kLWNhcmQtYXJlYScpOwoKICAgICAgaWYgKGFyZWEpIHsKICAgICAgICBhcmVhLnN0eWxlLmJhY2tncm91bmQgPSAicmdiYSgwLCAwLCAwLCAiLmNvbmNhdChkYXJrbmVzcywgIikiKTsKICAgICAgfQogICAgfSwKICAgIGdldEltYWdlTGlnaHRuZXNzOiBmdW5jdGlvbiBnZXRJbWFnZUxpZ2h0bmVzcyhpbWFnZSwgb25Mb2FkLCBvbkVycm9yKSB7CiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTsKICAgICAgaW1hZ2UuY3Jvc3NPcmlnaW4gPSAnQW5vbnltb3VzJzsKCiAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgY29sb3JTdW0gPSAwOwogICAgICAgIHZhciBjdHg7CiAgICAgICAgdmFyIGltYWdlRGF0YTsKICAgICAgICB2YXIgaW1hZ2VNZXRhZGF0YTsKICAgICAgICB2YXIgcjsKICAgICAgICB2YXIgZzsKICAgICAgICB2YXIgYjsKICAgICAgICB2YXIgYXZlcmFnZTsKICAgICAgICBjYW52YXMud2lkdGggPSB0aGlzLndpZHRoOwogICAgICAgIGNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodDsKICAgICAgICBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKICAgICAgICBjdHguZHJhd0ltYWdlKHRoaXMsIDAsIDApOwogICAgICAgIGltYWdlRGF0YSA9IGN0eC5nZXRJbWFnZURhdGEoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKICAgICAgICBpbWFnZU1ldGFkYXRhID0gaW1hZ2VEYXRhLmRhdGE7CgogICAgICAgIGZvciAodmFyIHggPSAwLCBsZW4gPSBpbWFnZU1ldGFkYXRhLmxlbmd0aDsgeCA8IGxlbjsgeCArPSA0KSB7CiAgICAgICAgICByID0gaW1hZ2VNZXRhZGF0YVt4XTsKICAgICAgICAgIGcgPSBpbWFnZU1ldGFkYXRhW3ggKyAxXTsKICAgICAgICAgIGIgPSBpbWFnZU1ldGFkYXRhW3ggKyAyXTsKICAgICAgICAgIGF2ZXJhZ2UgPSBNYXRoLmZsb29yKChyICsgZyArIGIpIC8gMyk7CiAgICAgICAgICBjb2xvclN1bSArPSBhdmVyYWdlOwogICAgICAgIH0KCiAgICAgICAgb25Mb2FkKE1hdGguZmxvb3IoY29sb3JTdW0gLyAodGhpcy53aWR0aCAqIHRoaXMuaGVpZ2h0KSkpOwogICAgICB9OwoKICAgICAgaW1hZ2Uub25lcnJvciA9IG9uRXJyb3I7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgYXBwbHlCYWNrZ3JvdW5kID0gZnVuY3Rpb24gYXBwbHlCYWNrZ3JvdW5kKCkgewogICAgICB2YXIgZGFya25lc3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDAuNjsKCiAgICAgIGlmIChfdGhpcy5tZFRleHRTY3JpbSkgewogICAgICAgIF90aGlzLmFwcGx5U2NyaW1Db2xvcihkYXJrbmVzcyk7CiAgICAgIH0gZWxzZSBpZiAoX3RoaXMubWRTb2xpZCkgewogICAgICAgIF90aGlzLmFwcGx5U29saWRDb2xvcihkYXJrbmVzcyk7CiAgICAgIH0KICAgIH07CgogICAgdmFyIGltYWdlID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignaW1nJyk7CgogICAgaWYgKGltYWdlICYmICh0aGlzLm1kVGV4dFNjcmltIHx8IHRoaXMubWRTb2xpZCkpIHsKICAgICAgdGhpcy5nZXRJbWFnZUxpZ2h0bmVzcyhpbWFnZSwgZnVuY3Rpb24gKGxpZ2h0bmVzcykgewogICAgICAgIHZhciBsaW1pdCA9IDI1NjsKICAgICAgICB2YXIgZGFya25lc3MgPSAoTWF0aC5hYnMobGltaXQgLSBsaWdodG5lc3MpICogMTAwIC8gbGltaXQgKyAxNSkgLyAxMDA7CgogICAgICAgIGlmIChkYXJrbmVzcyA+PSAwLjcpIHsKICAgICAgICAgIGRhcmtuZXNzID0gMC43OwogICAgICAgIH0KCiAgICAgICAgYXBwbHlCYWNrZ3JvdW5kKGRhcmtuZXNzKTsKICAgICAgfSwgYXBwbHlCYWNrZ3JvdW5kKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MdCardMediaCover.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"md-card-media-cover\" :class=\"coverClasses\">\n    <slot />\n    <div class=\"md-card-backdrop\" :style=\"coverStyles\" v-if=\"mdTextScrim\" ref=\"backdrop\"></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'MdCardMediaCover',\n    props: {\n      mdTextScrim: Boolean,\n      mdSolid: Boolean\n    },\n    data: () => ({\n      backdropBackground: {}\n    }),\n    computed: {\n      coverClasses () {\n        return {\n          'md-text-scrim': this.mdTextScrim,\n          'md-solid': this.mdSolid\n        }\n      },\n      coverStyles () {\n        return {\n          background: this.backdropBackground\n        }\n      }\n    },\n    methods: {\n      applyScrimColor (darkness) {\n        if (this.$refs.backdrop) {\n          this.backdropBackground = `linear-gradient(to bottom, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, ${darkness / 2}) 66%, rgba(0, 0, 0, ${darkness}) 100%)`\n        }\n      },\n      applySolidColor (darkness) {\n        let area = this.$el.querySelector('.md-card-area')\n\n        if (area) {\n          area.style.background = `rgba(0, 0, 0, ${darkness})`\n        }\n      },\n      getImageLightness (image, onLoad, onError) {\n        let canvas = document.createElement('canvas')\n\n        image.crossOrigin = 'Anonymous'\n\n        image.onload = function () {\n          let colorSum = 0\n          let ctx\n          let imageData\n          let imageMetadata\n          let r\n          let g\n          let b\n          let average\n\n          canvas.width = this.width\n          canvas.height = this.height\n          ctx = canvas.getContext('2d')\n\n          ctx.drawImage(this, 0, 0)\n\n          imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n          imageMetadata = imageData.data\n\n          for (let x = 0, len = imageMetadata.length; x < len; x += 4) {\n            r = imageMetadata[x]\n            g = imageMetadata[x + 1]\n            b = imageMetadata[x + 2]\n\n            average = Math.floor((r + g + b) / 3)\n            colorSum += average\n          }\n\n          onLoad(Math.floor(colorSum / (this.width * this.height)))\n        }\n\n        image.onerror = onError\n      }\n    },\n    mounted () {\n      const applyBackground = (darkness = 0.6) => {\n        if (this.mdTextScrim) {\n          this.applyScrimColor(darkness)\n        } else if (this.mdSolid) {\n          this.applySolidColor(darkness)\n        }\n      }\n      let image = this.$el.querySelector('img')\n\n      if (image && (this.mdTextScrim || this.mdSolid)) {\n        this.getImageLightness(image, (lightness) => {\n          let limit = 256\n          let darkness = (Math.abs(limit - lightness) * 100 / limit + 15) / 100\n\n          if (darkness >= 0.7) {\n            darkness = 0.7\n          }\n\n          applyBackground(darkness)\n        }, applyBackground)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .md-card-media-cover {\n    position: relative;\n    color: #fff;\n\n    &.md-solid {\n      .md-card-area {\n        background-color: rgba(#000, .54);\n      }\n    }\n\n    &.md-text-scrim {\n      .md-card-backdrop {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1;\n      }\n    }\n\n    .md-card-area {\n      display: flex;\n      flex-direction: column;\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 2;\n    }\n\n    .md-card-header {\n      display: flex;\n      flex-direction: column;\n\n      + .md-card-actions {\n        padding-top: 0;\n      }\n    }\n\n    .md-subhead {\n      opacity: 1;\n    }\n\n    .md-card-header,\n    .md-card-actions {\n      .md-button:not(.md-primary):not(.md-accent) {\n        color: #fff !important;\n\n        &.md-icon-button {\n          .md-icon {\n            color: #fff !important;\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-material/src/components/MdCard/MdCardMedia"}]}