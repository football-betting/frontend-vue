{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdSwitch/MdSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdSwitch/MdSwitch.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1kQ29tcG9uZW50IGZyb20gJ2NvcmUvTWRDb21wb25lbnQnOwppbXBvcnQgTWRDaGVja2JveE1peGluIGZyb20gJ2NvbXBvbmVudHMvTWRDaGVja2JveC9NZENoZWNrYm94TWl4aW4nOwppbXBvcnQgTWRVdWlkIGZyb20gJ2NvcmUvdXRpbHMvTWRVdWlkJzsKZXhwb3J0IGRlZmF1bHQgbmV3IE1kQ29tcG9uZW50KHsKICBuYW1lOiAnTWRTd2l0Y2gnLAogIG1peGluczogW01kQ2hlY2tib3hNaXhpbl0sCiAgcHJvcHM6IHsKICAgIGlkOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICdtZC1zd2l0Y2gtJyArIE1kVXVpZCgpOwogICAgICB9CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["MdSwitch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,OAAA,WAAA,MAAA,kBAAA;AACA,OAAA,eAAA,MAAA,uCAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAEA,eAAA,IAAA,WAAA,CAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,eAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,eAAA,MAAA,EAAA;AAAA;AAFA;AADA;AAHA,CAAA,CAAA","sourcesContent":["<template>\n  <div class=\"md-switch\" :class=\"[$mdActiveTheme, checkClasses]\">\n    <div class=\"md-switch-container\" @click.stop=\"toggleCheck\">\n      <div class=\"md-switch-thumb\">\n        <md-ripple md-centered :md-active.sync=\"rippleActive\" :md-disabled=\"disabled\">\n          <input :id=\"id\" type=\"checkbox\" v-bind=\"{ id, name, disabled, required, value }\">\n        </md-ripple>\n      </div>\n    </div>\n\n    <label :for=\"id\" class=\"md-switch-label\" v-if=\"$slots.default\" @click.prevent=\"toggleCheck\">\n      <slot />\n    </label>\n  </div>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdCheckboxMixin from 'components/MdCheckbox/MdCheckboxMixin'\n  import MdUuid from 'core/utils/MdUuid'\n\n  export default new MdComponent({\n    name: 'MdSwitch',\n    mixins: [MdCheckboxMixin],\n    props: {\n      id: {\n        type: String,\n        default: () => 'md-switch-' + MdUuid()\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n  @import \"~components/MdElevation/mixins\";\n\n  $md-switch-width: 34px;\n  $md-switch-height: 14px;\n  $md-switch-size: 20px;\n  $md-switch-touch-size: 48px;\n\n  .md-switch {\n    width: auto;\n    margin: 16px 16px 16px 0;\n    display: inline-flex;\n    position: relative;\n\n    &:not(.md-disabled) {\n      cursor: pointer;\n\n      .md-switch-label {\n        cursor: pointer;\n      }\n    }\n\n    .md-switch-container {\n      width: $md-switch-width;\n      min-width: $md-switch-width;\n      height: $md-switch-height;\n      margin: 3px 0;\n      display: flex;\n      align-items: center;\n      position: relative;\n      border-radius: $md-switch-height;\n      transition: $md-transition-stand;\n    }\n\n    .md-switch-thumb {\n      @include md-elevation(1);\n      width: $md-switch-size;\n      height: $md-switch-size;\n      position: relative;\n      border-radius: 50%;\n      transition: $md-transition-stand;\n\n      &:before {\n        width: $md-switch-touch-size;\n        height: $md-switch-touch-size;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        z-index: 11;\n        transform: translate(-50%, -50%);\n        content: \" \";\n      }\n\n      .md-ripple {\n        width: $md-switch-touch-size !important;\n        height: $md-switch-touch-size !important;\n        top: 50% !important;\n        left: 50% !important;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n      }\n\n      input {\n        position: absolute;\n        left: -999em;\n      }\n    }\n\n    .md-switch-label {\n      height: $md-switch-size;\n      padding-left: 16px;\n      position: relative;\n      line-height: $md-switch-size;\n    }\n  }\n\n  .md-switch.md-checked {\n    .md-switch-thumb {\n      transform: translate3d(15px, 0, 0);\n    }\n  }\n\n  .md-switch.md-required {\n    label:after {\n      position: absolute;\n      top: 2px;\n      right: 0;\n      transform: translateX(calc(100% + 2px));\n      content: \"*\";\n      line-height: 1em;\n      vertical-align: top;\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-material/src/components/MdSwitch"}]}