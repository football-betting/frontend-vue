{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdChips/MdChips.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdChips/MdChips.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2thaXVyYmFuL1Byb2pla3RlL293bl9wcm9qZWN0cy92dWUtd2Vic2l0ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1kQ29tcG9uZW50IGZyb20gJ2NvcmUvTWRDb21wb25lbnQnOwppbXBvcnQgTWRGaWVsZCBmcm9tICdjb21wb25lbnRzL01kRmllbGQvTWRGaWVsZCc7CmltcG9ydCBNZElucHV0IGZyb20gJ2NvbXBvbmVudHMvTWRGaWVsZC9NZElucHV0L01kSW5wdXQnOwppbXBvcnQgTWRVdWlkIGZyb20gJ2NvcmUvdXRpbHMvTWRVdWlkJzsKaW1wb3J0IE1kUHJvcFZhbGlkYXRvciBmcm9tICdjb3JlL3V0aWxzL01kUHJvcFZhbGlkYXRvcic7CmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kQ2hpcHMnLAogIGNvbXBvbmVudHM6IHsKICAgIE1kRmllbGQ6IE1kRmllbGQsCiAgICBNZElucHV0OiBNZElucHV0CiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IEFycmF5LAogICAgaWQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICdtZC1jaGlwcy0nICsgTWRVdWlkKCk7CiAgICAgIH0KICAgIH0sCiAgICBtZElucHV0VHlwZTogX29iamVjdFNwcmVhZCh7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0KICAgIH0sIE1kUHJvcFZhbGlkYXRvcignbWQtaW5wdXQtdHlwZScsIFsnZW1haWwnLCAnbnVtYmVyJywgJ3Bhc3N3b3JkJywgJ3NlYXJjaCcsICd0ZWwnLCAndGV4dCcsICd1cmwnXSkpLAogICAgbWRQbGFjZWhvbGRlcjogW1N0cmluZywgTnVtYmVyXSwKICAgIG1kU3RhdGljOiBCb29sZWFuLAogICAgbWRBdXRvSW5zZXJ0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgbWRMaW1pdDogTnVtYmVyLAogICAgbWRDaGVja0R1cGxpY2F0ZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtZEZvcm1hdDogewogICAgICB0eXBlOiBGdW5jdGlvbgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlucHV0VmFsdWU6ICcnLAogICAgICBkdXBsaWNhdGVkQ2hpcDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGlwc0NsYXNzZXM6IGZ1bmN0aW9uIGNoaXBzQ2xhc3NlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAnbWQtaGFzLXZhbHVlJzogdGhpcy52YWx1ZSAmJiB0aGlzLnZhbHVlLmxlbmd0aAogICAgICB9OwogICAgfSwKICAgIG1vZGVsUmVzcGVjdExpbWl0OiBmdW5jdGlvbiBtb2RlbFJlc3BlY3RMaW1pdCgpIHsKICAgICAgcmV0dXJuICF0aGlzLm1kTGltaXQgfHwgdGhpcy52YWx1ZS5sZW5ndGggPCB0aGlzLm1kTGltaXQ7CiAgICB9LAogICAgZm9ybWF0dGVkSW5wdXRWYWx1ZTogZnVuY3Rpb24gZm9ybWF0dGVkSW5wdXRWYWx1ZSgpIHsKICAgICAgaWYgKCF0aGlzLm1kRm9ybWF0KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXRWYWx1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMubWRGb3JtYXQodGhpcy5pbnB1dFZhbHVlKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluc2VydENoaXA6IGZ1bmN0aW9uIGluc2VydENoaXAoX3JlZikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRhcmdldCA9IF9yZWYudGFyZ2V0OwogICAgICB2YXIgaW5wdXRWYWx1ZSA9IHRoaXMuZm9ybWF0dGVkSW5wdXRWYWx1ZTsKCiAgICAgIGlmICghaW5wdXRWYWx1ZSB8fCAhdGhpcy5tb2RlbFJlc3BlY3RMaW1pdCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMudmFsdWUuaW5jbHVkZXMoaW5wdXRWYWx1ZSkpIHsKICAgICAgICB0aGlzLmR1cGxpY2F0ZWRDaGlwID0gbnVsbDsgLy8gdG8gdHJpZ2dlciBhbmltYXRlCgogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLmR1cGxpY2F0ZWRDaGlwID0gaW5wdXRWYWx1ZTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMudmFsdWUucHVzaChpbnB1dFZhbHVlKTsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbHVlKTsKICAgICAgdGhpcy4kZW1pdCgnbWQtaW5zZXJ0JywgaW5wdXRWYWx1ZSk7CiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9ICcnOwogICAgfSwKICAgIHJlbW92ZUNoaXA6IGZ1bmN0aW9uIHJlbW92ZUNoaXAoY2hpcCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBpbmRleCA9IHRoaXMudmFsdWUuaW5kZXhPZihjaGlwKTsKICAgICAgdGhpcy52YWx1ZS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMudmFsdWUpOwogICAgICB0aGlzLiRlbWl0KCdtZC1kZWxldGUnLCBjaGlwLCBpbmRleCk7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLiRyZWZzLmlucHV0LiRlbC5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVCYWNrUmVtb3ZlOiBmdW5jdGlvbiBoYW5kbGVCYWNrUmVtb3ZlKCkgewogICAgICBpZiAoIXRoaXMuaW5wdXRWYWx1ZSkgewogICAgICAgIHRoaXMucmVtb3ZlQ2hpcCh0aGlzLnZhbHVlW3RoaXMudmFsdWUubGVuZ3RoIC0gMV0pOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlSW5wdXQ6IGZ1bmN0aW9uIGhhbmRsZUlucHV0KCkgewogICAgICBpZiAodGhpcy5tZENoZWNrRHVwbGljYXRlZCkgewogICAgICAgIHRoaXMuY2hlY2tEdXBsaWNhdGVkKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kdXBsaWNhdGVkQ2hpcCA9IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVGb2N1c091dDogZnVuY3Rpb24gaGFuZGxlRm9jdXNPdXQoX3JlZjIpIHsKICAgICAgdmFyIHRhcmdldCA9IF9yZWYyLnRhcmdldDsKCiAgICAgIGlmICh0aGlzLm1kQXV0b0luc2VydCkgewogICAgICAgIHRoaXMuaW5zZXJ0Q2hpcCh0YXJnZXQpOwogICAgICB9CiAgICB9LAogICAgY2hlY2tEdXBsaWNhdGVkOiBmdW5jdGlvbiBjaGVja0R1cGxpY2F0ZWQoKSB7CiAgICAgIGlmICghdGhpcy52YWx1ZS5pbmNsdWRlcyh0aGlzLmZvcm1hdHRlZElucHV0VmFsdWUpKSB7CiAgICAgICAgdGhpcy5kdXBsaWNhdGVkQ2hpcCA9IG51bGw7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBpZiAoIXRoaXMubWRDaGVja0R1cGxpY2F0ZWQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHRoaXMuZHVwbGljYXRlZENoaXAgPSB0aGlzLmZvcm1hdHRlZElucHV0VmFsdWU7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKCkgewogICAgICB0aGlzLmNoZWNrRHVwbGljYXRlZCgpOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["MdChips.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <md-field class=\"md-chips\" :class=\"[$mdActiveTheme, chipsClasses]\">\n    <slot />\n\n    <md-chip\n      v-for=\"(chip, key) in value\"\n      :key=\"chip\"\n      :md-deletable=\"!mdStatic\"\n      :md-clickable=\"!mdStatic\"\n      :md-duplicated=\"duplicatedChip === chip\"\n      @keydown.enter=\"$emit('md-click', chip, key)\"\n      @click.native=\"$emit('md-click', chip, key)\"\n      @md-delete.stop=\"removeChip(chip)\">\n      <slot name=\"md-chip\" :chip=\"chip\" v-if=\"$scopedSlots['md-chip']\">{{ chip }}</slot>\n      <template v-else>{{ chip }}</template>\n    </md-chip>\n\n    <md-input\n      ref=\"input\"\n      v-model.trim=\"inputValue\"\n      v-if=\"!mdStatic && modelRespectLimit\"\n      :type=\"mdInputType\"\n      :id=\"id\"\n      :placeholder=\"mdPlaceholder\"\n      @input=\"handleInput\"\n      @keydown.enter=\"insertChip\"\n      @keydown.8=\"handleBackRemove\"\n      @focusout=\"handleFocusOut\">\n    </md-input>\n  </md-field>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdField from 'components/MdField/MdField'\n  import MdInput from 'components/MdField/MdInput/MdInput'\n  import MdUuid from 'core/utils/MdUuid'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  export default new MdComponent({\n    name: 'MdChips',\n    components: {\n      MdField,\n      MdInput\n    },\n    props: {\n      value: Array,\n      id: {\n        type: [String, Number],\n        default: () => 'md-chips-' + MdUuid()\n      },\n      mdInputType: {\n        type: [String, Number],\n        ...MdPropValidator('md-input-type', ['email', 'number', 'password', 'search', 'tel', 'text', 'url'])\n      },\n      mdPlaceholder: [String, Number],\n      mdStatic: Boolean,\n      mdAutoInsert: {\n        type: Boolean,\n        default: false\n      },\n      mdLimit: Number,\n      mdCheckDuplicated: {\n        type: Boolean,\n        default: false\n      },\n      mdFormat: {\n        type: Function\n      }\n    },\n    data: () => ({\n      inputValue: '',\n      duplicatedChip: null\n    }),\n    computed: {\n      chipsClasses () {\n        return {\n          'md-has-value': this.value && this.value.length\n        }\n      },\n\n      modelRespectLimit () {\n        return !this.mdLimit || this.value.length < this.mdLimit\n      },\n\n      formattedInputValue () {\n        if (!this.mdFormat) {\n          return this.inputValue\n        }\n        return this.mdFormat(this.inputValue)\n      }\n    },\n    methods: {\n      insertChip ({ target }) {\n        let inputValue = this.formattedInputValue\n\n        if (!inputValue || !this.modelRespectLimit) {\n          return\n        }\n\n        if (this.value.includes(inputValue)) {\n          this.duplicatedChip = null\n          // to trigger animate\n          this.$nextTick(() => {\n            this.duplicatedChip = inputValue\n          })\n          return\n        }\n\n        this.value.push(inputValue)\n        this.$emit('input', this.value)\n        this.$emit('md-insert', inputValue)\n        this.inputValue = ''\n      },\n      removeChip (chip) {\n        const index = this.value.indexOf(chip)\n\n        this.value.splice(index, 1)\n        this.$emit('input', this.value)\n        this.$emit('md-delete', chip, index)\n        this.$nextTick(() => this.$refs.input.$el.focus())\n      },\n      handleBackRemove () {\n        if (!this.inputValue) {\n          this.removeChip(this.value[this.value.length - 1])\n        }\n      },\n      handleInput () {\n        if (this.mdCheckDuplicated) {\n          this.checkDuplicated()\n        } else {\n          this.duplicatedChip = null\n        }\n      },\n      handleFocusOut ({ target }) {\n        if (this.mdAutoInsert) {\n          this.insertChip(target)\n        }\n      },\n      checkDuplicated () {\n        if (!this.value.includes(this.formattedInputValue)) {\n          this.duplicatedChip = null\n          return false\n        }\n\n        if (!this.mdCheckDuplicated) {\n          return false\n        }\n\n        this.duplicatedChip = this.formattedInputValue\n      }\n    },\n    watch: {\n      value () {\n        this.checkDuplicated()\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  .md-chips.md-field {\n    padding-top: 12px;\n    flex-wrap: wrap;\n\n    &.md-has-value {\n      label {\n        top: -6px;\n      }\n    }\n\n    .md-chip {\n      margin-bottom: 4px;\n\n      &:last-of-type {\n        margin-right: 8px;\n      }\n    }\n\n    .md-input {\n      min-width: 128px;\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/vue-material/src/components/MdChips"}]}