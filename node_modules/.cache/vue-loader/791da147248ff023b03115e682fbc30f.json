{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdCheckbox/MdCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdCheckbox/MdCheckbox.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRDaGVja2JveE1peGluIGZyb20gJ2NvbXBvbmVudHMvTWRDaGVja2JveC9NZENoZWNrYm94TWl4aW4nCmltcG9ydCBNZFV1aWQgZnJvbSAnY29yZS91dGlscy9NZFV1aWQnCgpleHBvcnQgZGVmYXVsdCBuZXcgTWRDb21wb25lbnQoewogIG5hbWU6ICdNZENoZWNrYm94JywKICBtaXhpbnM6IFtNZENoZWNrYm94TWl4aW5dLAogIHByb3BzOiB7CiAgICBpZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICdtZC1jaGVja2JveC0nICsgTWRVdWlkKCkKICAgIH0KICB9Cn0pCg=="},{"version":3,"sources":["MdCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdCheckbox.vue","sourceRoot":"node_modules/vue-material/src/components/MdCheckbox","sourcesContent":["<template>\n  <div class=\"md-checkbox\" :class=\"[$mdActiveTheme, checkClasses]\">\n    <div class=\"md-checkbox-container\" @click.stop=\"toggleCheck\">\n      <md-ripple md-centered :md-active.sync=\"rippleActive\" :md-disabled=\"disabled\">\n        <input :id=\"id\" type=\"checkbox\" v-bind=\"attrs\" :indeterminate.prop=\"indeterminate\">\n      </md-ripple>\n    </div>\n\n    <label :for=\"id\" class=\"md-checkbox-label\" v-if=\"$slots.default\" @click.prevent=\"toggleCheck\">\n      <slot />\n    </label>\n  </div>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdCheckboxMixin from 'components/MdCheckbox/MdCheckboxMixin'\n  import MdUuid from 'core/utils/MdUuid'\n\n  export default new MdComponent({\n    name: 'MdCheckbox',\n    mixins: [MdCheckboxMixin],\n    props: {\n      id: {\n        type: String,\n        default: () => 'md-checkbox-' + MdUuid()\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  $md-checkbox-size: 20px;\n  $md-checkbox-touch-size: 48px;\n\n  .md-checkbox {\n    width: auto;\n    margin: 16px 16px 16px 0;\n    display: inline-flex;\n    position: relative;\n\n    &:not(.md-disabled) {\n      cursor: pointer;\n\n      .md-checkbox-label {\n        cursor: pointer;\n      }\n    }\n\n    .md-checkbox-container {\n      width: $md-checkbox-size;\n      min-width: $md-checkbox-size;\n      height: $md-checkbox-size;\n      position: relative;\n      border-radius: 2px;\n      border: 2px solid transparent;\n      transition: $md-transition-stand;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:before,\n      &:after {\n        position: absolute;\n        transition: $md-transition-drop;\n        content: \" \";\n      }\n\n      &:before {\n        width: $md-checkbox-touch-size;\n        height: $md-checkbox-touch-size;\n        top: 50%;\n        left: 50%;\n        z-index: 11;\n        border-radius: 50%;\n        transform: translate(-50%, -50%);\n      }\n\n      &:after {\n        width: 6px;\n        height: 13px;\n        top: 0;\n        left: 5px;\n        z-index: 12;\n        border: 2px solid transparent;\n        border-top: 0;\n        border-left: 0;\n        opacity: 0;\n        transform: rotate(45deg) scale3D(.15, .15, 1);\n      }\n\n      .md-ripple {\n        width: $md-checkbox-touch-size !important;\n        height: $md-checkbox-touch-size !important;\n        top: 50% !important;\n        left: 50% !important;\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n      }\n\n      input {\n        position: absolute;\n        left: -999em;\n      }\n    }\n\n    .md-checkbox-label {\n      height: $md-checkbox-size;\n      padding-left: 16px;\n      position: relative;\n      line-height: $md-checkbox-size;\n    }\n  }\n\n  .md-checkbox.md-indeterminate {\n    .md-checkbox-container {\n      &:after {\n        width: 12px;\n        height: 2px;\n        top: 50%;\n        left: 50%;\n        z-index: 7;\n        border-style: solid;\n        border-width: 0 0 2px;\n        opacity: 0;\n        transform: translate(-50%, -50%) !important;\n      }\n    }\n  }\n\n  .md-checkbox.md-checked {\n    .md-checkbox-container {\n      &:after {\n        opacity: 1;\n        transform: rotate(45deg) scale3D(1, 1, 1);\n        transition: $md-transition-stand;\n      }\n    }\n  }\n\n  .md-checkbox.md-disabled.md-checked {\n    .md-checkbox-container {\n      border-color: transparent !important;\n    }\n  }\n\n  .md-checkbox.md-required {\n    label:after {\n      position: absolute;\n      top: 2px;\n      right: 0;\n      transform: translateX(calc(100% + 2px));\n      content: \"*\";\n      line-height: 1em;\n      vertical-align: top;\n    }\n  }\n</style>\n"]}]}