{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdAutocomplete/MdAutocomplete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdAutocomplete/MdAutocomplete.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmdXp6eSBmcm9tICdmdXp6eXNlYXJjaCcKaW1wb3J0IGlzUHJvbWlzZSBmcm9tICdpcy1wcm9taXNlJwppbXBvcnQgTWRQcm9wVmFsaWRhdG9yIGZyb20gJ2NvcmUvdXRpbHMvTWRQcm9wVmFsaWRhdG9yJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNZEF1dG9jb21wbGV0ZScsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IG51bGwsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgbWREZW5zZTogQm9vbGVhbiwKICAgIG1kTGF5b3V0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2Zsb2F0aW5nJywKICAgICAgLi4uTWRQcm9wVmFsaWRhdG9yKCdtZC1sYXlvdXQnLCBbCiAgICAgICAgJ2Zsb2F0aW5nJywKICAgICAgICAnYm94JwogICAgICBdKQogICAgfSwKICAgIG1kT3Blbk9uRm9jdXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIG1kRnV6enlTZWFyY2g6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIG1kT3B0aW9uczogewogICAgICB0eXBlOiBbQXJyYXksIFByb21pc2VdLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIG1kSW5wdXROYW1lOiBTdHJpbmcsCiAgICBtZElucHV0SWQ6IFN0cmluZywKICAgIG1kSW5wdXRNYXhsZW5ndGg6IFtTdHJpbmcsIE51bWJlcl0sCiAgICBtZElucHV0UGxhY2Vob2xkZXI6IFtTdHJpbmcsIE51bWJlcl0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoVGVybTogdGhpcy52YWx1ZSwKICAgICAgc2hvd01lbnU6IGZhbHNlLAogICAgICB0cmlnZ2VyUG9wb3ZlcjogZmFsc2UsCiAgICAgIGlzUHJvbWlzZVBlbmRpbmc6IGZhbHNlLAogICAgICBmaWx0ZXJlZEFzeW5jT3B0aW9uczogW10KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc0JveExheW91dCAoKSB7CiAgICAgIHJldHVybiB0aGlzLm1kTGF5b3V0ID09PSAnYm94JwogICAgfSwKICAgIGZpZWxkQ2xhc3NlcyAoKSB7CiAgICAgIGlmICh0aGlzLmlzQm94TGF5b3V0KSB7CiAgICAgICAgcmV0dXJuICdtZC1hdXRvY29tcGxldGUtYm94JwogICAgICB9CiAgICB9LAogICAgY29udGVudENsYXNzZXMgKCkgewogICAgICBpZiAodGhpcy5pc0JveExheW91dCkgewogICAgICAgIHJldHVybiAnbWQtYXV0b2NvbXBsZXRlLWJveC1jb250ZW50JwogICAgICB9CiAgICB9LAogICAgc2hvdWxkRmlsdGVyICgpIHsKICAgICAgcmV0dXJuIHRoaXMubWRPcHRpb25zWzBdICYmIHRoaXMuc2VhcmNoVGVybQogICAgfSwKICAgIGZpbHRlcmVkU3RhdGljT3B0aW9ucyAoKSB7CiAgICAgIGlmICh0aGlzLmlzUHJvbWlzZSh0aGlzLm1kT3B0aW9ucykpIHsKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQoKICAgICAgY29uc3QgZmlyc3RJdGVtID0gdGhpcy5tZE9wdGlvbnNbMF0KCiAgICAgIGlmICh0aGlzLnNob3VsZEZpbHRlcikgewogICAgICAgIGlmICh0eXBlb2YgZmlyc3RJdGVtID09PSAnc3RyaW5nJykgewogICAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyQnlTdHJpbmcoKQogICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGZpcnN0SXRlbSA9PT0gJ29iamVjdCcpIHsKICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlckJ5T2JqZWN0KCkKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLm1kT3B0aW9ucwogICAgfSwKICAgIGhhc0ZpbHRlcmVkSXRlbXMgKCkgewogICAgICByZXR1cm4gdGhpcy5maWx0ZXJlZFN0YXRpY09wdGlvbnMubGVuZ3RoID4gMCB8fCB0aGlzLmZpbHRlcmVkQXN5bmNPcHRpb25zLmxlbmd0aCA+IDAKICAgIH0sCiAgICBoYXNTY29wZWRFbXB0eVNsb3QgKCkgewogICAgICByZXR1cm4gdGhpcy4kc2NvcGVkU2xvdHNbJ21kLWF1dG9jb21wbGV0ZS1lbXB0eSddCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbWRPcHRpb25zOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgICAgaGFuZGxlciAoKSB7CiAgICAgICAgaWYgKHRoaXMuaXNQcm9taXNlKHRoaXMubWRPcHRpb25zKSkgewogICAgICAgICAgdGhpcy5pc1Byb21pc2VQZW5kaW5nID0gdHJ1ZQogICAgICAgICAgdGhpcy5tZE9wdGlvbnMudGhlbihvcHRpb25zID0+IHsKICAgICAgICAgICAgdGhpcy5maWx0ZXJlZEFzeW5jT3B0aW9ucyA9IG9wdGlvbnMKICAgICAgICAgICAgdGhpcy5pc1Byb21pc2VQZW5kaW5nID0gZmFsc2UKICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIHZhbHVlICh2YWwpIHsKICAgICAgdGhpcy5zZWFyY2hUZXJtID0gdmFsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRPcHRpb25zICgpIHsKICAgICAgaWYgKHRoaXMuaXNQcm9taXNlKHRoaXMubWRPcHRpb25zKSkgewogICAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkQXN5bmNPcHRpb25zCiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkU3RhdGljT3B0aW9ucwogICAgfSwKICAgIGlzUHJvbWlzZSAob2JqKSB7CiAgICAgIHJldHVybiBpc1Byb21pc2Uob2JqKQogICAgfSwKICAgIG1hdGNoVGV4dCAoaXRlbSkgewogICAgICBjb25zdCB0YXJnZXQgPSBpdGVtLnRvTG93ZXJDYXNlKCkKICAgICAgY29uc3Qgc2VhcmNoID0gdGhpcy5zZWFyY2hUZXJtLnRvTG93ZXJDYXNlKCkKCiAgICAgIGlmICh0aGlzLm1kRnV6enlTZWFyY2gpIHsKICAgICAgICByZXR1cm4gZnV6enkoc2VhcmNoLCB0YXJnZXQpCiAgICAgIH0KCiAgICAgIHJldHVybiB0YXJnZXQuaW5jbHVkZXMoc2VhcmNoKQogICAgfSwKICAgIGZpbHRlckJ5U3RyaW5nICgpIHsKICAgICAgcmV0dXJuIHRoaXMubWRPcHRpb25zLmZpbHRlcihpdGVtID0+IHRoaXMubWF0Y2hUZXh0KGl0ZW0pKQogICAgfSwKICAgIGZpbHRlckJ5T2JqZWN0ICgpIHsKICAgICAgcmV0dXJuIHRoaXMubWRPcHRpb25zLmZpbHRlcihpdGVtID0+IHsKICAgICAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKGl0ZW0pCiAgICAgICAgY29uc3QgdmFsdWVzQ291bnQgPSB2YWx1ZXMubGVuZ3RoCgogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHZhbHVlc0NvdW50OyBpKyspIHsKICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWVzW2ldID09PSAnc3RyaW5nJyAmJiB0aGlzLm1hdGNoVGV4dCh2YWx1ZXNbaV0pKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIG9wZW5PbkZvY3VzICgpIHsKICAgICAgaWYgKHRoaXMubWRPcGVuT25Gb2N1cykgewogICAgICAgIHRoaXMuc2hvd09wdGlvbnMoKQogICAgICB9CiAgICB9LAogICAgb25JbnB1dCAodmFsdWUpIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2YWx1ZSkKCiAgICAgIGlmICghdGhpcy5tZE9wZW5PbkZvY3VzKSB7CiAgICAgICAgdGhpcy5zaG93T3B0aW9ucygpCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNlYXJjaFRlcm0uY29uc3RydWN0b3IudG9TdHJpbmcoKS5tYXRjaCgvZnVuY3Rpb24gKFx3KikvKVsxXS50b0xvd2VyQ2FzZSgpICE9PSAnaW5wdXRldmVudCcpIHsKICAgICAgICB0aGlzLiRlbWl0KCdtZC1jaGFuZ2VkJywgdGhpcy5zZWFyY2hUZXJtKQogICAgICB9CiAgICB9LAogICAgc2hvd09wdGlvbnMgKCkgewogICAgICBpZiAodGhpcy5zaG93TWVudSkgewogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CgogICAgICB0aGlzLnNob3dNZW51ID0gdHJ1ZQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy50cmlnZ2VyUG9wb3ZlciA9IHRydWUKICAgICAgICB0aGlzLiRlbWl0KCdtZC1vcGVuZWQnKQogICAgICB9KQogICAgfSwKICAgIGhpZGVPcHRpb25zICgpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMudHJpZ2dlclBvcG92ZXIgPSBmYWxzZQogICAgICAgIHRoaXMuJGVtaXQoJ21kLWNsb3NlZCcpCiAgICAgIH0pCiAgICB9LAogICAgc2VsZWN0SXRlbSAoaXRlbSwgJGV2ZW50KSB7CiAgICAgIGNvbnN0IGNvbnRlbnQgPSAkZXZlbnQudGFyZ2V0LnRleHRDb250ZW50LnRyaW0oKQoKICAgICAgdGhpcy5zZWFyY2hUZXJtID0gY29udGVudAogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGl0ZW0pCiAgICAgIHRoaXMuJGVtaXQoJ21kLXNlbGVjdGVkJywgaXRlbSkKICAgICAgdGhpcy5oaWRlT3B0aW9ucygpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["MdAutocomplete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"MdAutocomplete.vue","sourceRoot":"node_modules/vue-material/src/components/MdAutocomplete","sourcesContent":["<template>\n  <md-field class=\"md-autocomplete\" :class=\"fieldClasses\" md-clearable :md-inline=\"isBoxLayout\">\n    <md-menu md-direction=\"bottom-start\" :md-dense=\"mdDense\" md-align-trigger md-full-width :md-active.sync=\"showMenu\">\n      <md-input\n        v-model=\"searchTerm\"\n        v-bind=\"$attrs\"\n        :id=\"mdInputId\"\n        :name=\"mdInputName\"\n        :maxlength=\"mdInputMaxlength\"\n        :placeholder=\"mdInputPlaceholder\"\n        @focus.stop=\"openOnFocus\"\n        @blur=\"hideOptions\"\n        @input=\"onInput\"\n        @click.stop.prevent=\"openOnFocus\" />\n\n      <md-menu-content :class=\"contentClasses\" v-show=\"hasScopedEmptySlot || hasFilteredItems\">\n        <div class=\"md-autocomplete-loading\" v-if=\"isPromisePending\">\n          <md-progress-spinner :md-diameter=\"40\" :md-stroke=\"4\" md-mode=\"indeterminate\" />\n        </div>\n\n        <div class=\"md-autocomplete-items\" v-if=\"hasFilteredItems\">\n          <md-menu-item v-for=\"(item, index) in getOptions()\" :key=\"index\" @click=\"selectItem(item, $event)\">\n            <slot name=\"md-autocomplete-item\" :item=\"item\" :term=\"searchTerm\" v-if=\"$scopedSlots['md-autocomplete-item']\" />\n            <template v-else>{{ item }}</template>\n          </md-menu-item>\n        </div>\n\n        <md-menu-item v-else-if=\"hasScopedEmptySlot\">\n          <div class=\"md-autocomplete-empty\">\n            <slot name=\"md-autocomplete-empty\" :term=\"searchTerm\" />\n          </div>\n        </md-menu-item>\n      </md-menu-content>\n    </md-menu>\n\n    <slot />\n  </md-field>\n</template>\n\n<script>\n  import fuzzy from 'fuzzysearch'\n  import isPromise from 'is-promise'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  export default {\n    name: 'MdAutocomplete',\n    props: {\n      value: {\n        type: null,\n        required: true\n      },\n      mdDense: Boolean,\n      mdLayout: {\n        type: String,\n        default: 'floating',\n        ...MdPropValidator('md-layout', [\n          'floating',\n          'box'\n        ])\n      },\n      mdOpenOnFocus: {\n        type: Boolean,\n        default: true\n      },\n      mdFuzzySearch: {\n        type: Boolean,\n        default: true\n      },\n      mdOptions: {\n        type: [Array, Promise],\n        required: true\n      },\n      mdInputName: String,\n      mdInputId: String,\n      mdInputMaxlength: [String, Number],\n      mdInputPlaceholder: [String, Number]\n    },\n    data () {\n      return {\n        searchTerm: this.value,\n        showMenu: false,\n        triggerPopover: false,\n        isPromisePending: false,\n        filteredAsyncOptions: []\n      }\n    },\n    computed: {\n      isBoxLayout () {\n        return this.mdLayout === 'box'\n      },\n      fieldClasses () {\n        if (this.isBoxLayout) {\n          return 'md-autocomplete-box'\n        }\n      },\n      contentClasses () {\n        if (this.isBoxLayout) {\n          return 'md-autocomplete-box-content'\n        }\n      },\n      shouldFilter () {\n        return this.mdOptions[0] && this.searchTerm\n      },\n      filteredStaticOptions () {\n        if (this.isPromise(this.mdOptions)) {\n          return false\n        }\n\n        const firstItem = this.mdOptions[0]\n\n        if (this.shouldFilter) {\n          if (typeof firstItem === 'string') {\n            return this.filterByString()\n          } else if (typeof firstItem === 'object') {\n            return this.filterByObject()\n          }\n        }\n\n        return this.mdOptions\n      },\n      hasFilteredItems () {\n        return this.filteredStaticOptions.length > 0 || this.filteredAsyncOptions.length > 0\n      },\n      hasScopedEmptySlot () {\n        return this.$scopedSlots['md-autocomplete-empty']\n      }\n    },\n    watch: {\n      mdOptions: {\n        deep: true,\n        immediate: true,\n        handler () {\n          if (this.isPromise(this.mdOptions)) {\n            this.isPromisePending = true\n            this.mdOptions.then(options => {\n              this.filteredAsyncOptions = options\n              this.isPromisePending = false\n            })\n          }\n        }\n      },\n\n      value (val) {\n        this.searchTerm = val\n      }\n    },\n    methods: {\n      getOptions () {\n        if (this.isPromise(this.mdOptions)) {\n          return this.filteredAsyncOptions\n        }\n\n        return this.filteredStaticOptions\n      },\n      isPromise (obj) {\n        return isPromise(obj)\n      },\n      matchText (item) {\n        const target = item.toLowerCase()\n        const search = this.searchTerm.toLowerCase()\n\n        if (this.mdFuzzySearch) {\n          return fuzzy(search, target)\n        }\n\n        return target.includes(search)\n      },\n      filterByString () {\n        return this.mdOptions.filter(item => this.matchText(item))\n      },\n      filterByObject () {\n        return this.mdOptions.filter(item => {\n          const values = Object.values(item)\n          const valuesCount = values.length\n\n          for (let i = 0; i <= valuesCount; i++) {\n            if (typeof values[i] === 'string' && this.matchText(values[i])) {\n              return true\n            }\n          }\n        })\n      },\n      openOnFocus () {\n        if (this.mdOpenOnFocus) {\n          this.showOptions()\n        }\n      },\n      onInput (value) {\n        this.$emit('input', value)\n\n        if (!this.mdOpenOnFocus) {\n          this.showOptions()\n        }\n\n        if (this.searchTerm.constructor.toString().match(/function (\\w*)/)[1].toLowerCase() !== 'inputevent') {\n          this.$emit('md-changed', this.searchTerm)\n        }\n      },\n      showOptions () {\n        if (this.showMenu) {\n          return false\n        }\n\n        this.showMenu = true\n        this.$nextTick(() => {\n          this.triggerPopover = true\n          this.$emit('md-opened')\n        })\n      },\n      hideOptions () {\n        this.$nextTick(() => {\n          this.triggerPopover = false\n          this.$emit('md-closed')\n        })\n      },\n      selectItem (item, $event) {\n        const content = $event.target.textContent.trim()\n\n        this.searchTerm = content\n        this.$emit('input', item)\n        this.$emit('md-selected', item)\n        this.hideOptions()\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n  @import \"~components/MdElevation/mixins\";\n  @import \"~components/MdLayout/mixins\";\n\n  .md-autocomplete {\n    .md-menu {\n      width: 100%;\n      display: flex;\n    }\n  }\n\n  .md-autocomplete-loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 100;\n  }\n\n  .md-field.md-inline.md-autocomplete-box {\n    @include md-elevation(2);\n    padding-top: 2px;\n    border-radius: 2px;\n\n    &.md-focused {\n      z-index: 120;\n    }\n\n    &:before,\n    &:after {\n      display: none;\n    }\n\n    .md-toolbar & {\n      min-height: 40px;\n      height: 40px;\n      margin: 0;\n      box-shadow: none;\n    }\n\n    .md-menu {\n      align-items: center;\n    }\n\n    .md-input {\n      padding-left: 16px;\n    }\n\n    &.md-focused label,\n    label,\n    .md-input-action {\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    .md-input-action {\n      right: 8px;\n    }\n\n    &.md-focused label,\n    label {\n      margin-top: 2px;\n      left: 16px;\n    }\n  }\n\n  .md-autocomplete-box-content:after {\n    height: 6px;\n    position: absolute;\n    top: -6px;\n    right: 0;\n    left: 0;\n    z-index: 120;\n    border-bottom: 1px solid;\n    content: \"\";\n  }\n</style>\n"]}]}