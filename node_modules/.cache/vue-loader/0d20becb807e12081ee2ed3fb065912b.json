{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdDatepicker/MdDatepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdDatepicker/MdDatepicker.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgaXNGaXJlZm94IGZyb20gJ2lzLWZpcmVmb3gnCmltcG9ydCBmb3JtYXQgZnJvbSAnZGF0ZS1mbnMvZm9ybWF0JwppbXBvcnQgcGFyc2UgZnJvbSAnZGF0ZS1mbnMvcGFyc2UnCmltcG9ydCBpc1ZhbGlkIGZyb20gJ2RhdGUtZm5zL2lzVmFsaWQnCmltcG9ydCBNZFByb3BWYWxpZGF0b3IgZnJvbSAnY29yZS91dGlscy9NZFByb3BWYWxpZGF0b3InCmltcG9ydCBNZE92ZXJsYXkgZnJvbSAnY29tcG9uZW50cy9NZE92ZXJsYXkvTWRPdmVybGF5JwppbXBvcnQgTWREYXRlcGlja2VyRGlhbG9nIGZyb20gJy4vTWREYXRlcGlja2VyRGlhbG9nJwppbXBvcnQgTWREYXRlSWNvbiBmcm9tICdjb3JlL2ljb25zL01kRGF0ZUljb24nCmltcG9ydCBNZERlYm91bmNlIGZyb20gJ2NvcmUvdXRpbHMvTWREZWJvdW5jZScKaW1wb3J0IE1kRmllbGQgZnJvbSAnY29tcG9uZW50cy9NZEZpZWxkL01kRmllbGQnCmltcG9ydCBNZElucHV0IGZyb20gJ2NvbXBvbmVudHMvTWRGaWVsZC9NZElucHV0L01kSW5wdXQnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01kRGF0ZXBpY2tlcicsCiAgY29tcG9uZW50czogewogICAgTWRPdmVybGF5LAogICAgTWREYXRlSWNvbiwKICAgIE1kRmllbGQsCiAgICBNZElucHV0LAogICAgTWREYXRlcGlja2VyRGlhbG9nCiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IFtTdHJpbmcsIE51bWJlciwgRGF0ZV0sCiAgICBtZERpc2FibGVkRGF0ZXM6IFtBcnJheSwgRnVuY3Rpb25dLAogICAgbWRPcGVuT25Gb2N1czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgbWRPdmVycmlkZU5hdGl2ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgbWRJbW1lZGlhdGVseTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIG1kTW9kZWxUeXBlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBEYXRlLAogICAgICAuLi5NZFByb3BWYWxpZGF0b3IoJ21kLW1vZGVsLXR5cGUnLCBbRGF0ZSwgU3RyaW5nLCBOdW1iZXJdKQogICAgfSwKICAgIE1kRGVib3VuY2U6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMDAwCiAgICB9LAogICAgbWRDbGVhcmFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIHNob3dEaWFsb2c6IGZhbHNlLAogICAgLy8gU3RyaW5nIGZvciBpbnB1dAogICAgaW5wdXREYXRlOiAnJywKICAgIC8vIERhdGUgZm9yIHJlYWwgdmFsdWUKICAgIGxvY2FsRGF0ZTogbnVsbAogIH0pLAogIGNvbXB1dGVkOiB7CiAgICBsb2NhbGUgKCkgewogICAgICByZXR1cm4gdGhpcy4kbWF0ZXJpYWwubG9jYWxlCiAgICB9LAogICAgdHlwZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLm1kT3ZlcnJpZGVOYXRpdmUKICAgICAgICA/ICd0ZXh0JwogICAgICAgIDogJ2RhdGUnCiAgICB9LAogICAgZGF0ZUZvcm1hdCAoKSB7CiAgICAgIHJldHVybiB0aGlzLmxvY2FsZS5kYXRlRm9ybWF0IHx8ICd5eXl5LU1NLWRkJwogICAgfSwKICAgIG1vZGVsVHlwZSAoKSB7CiAgICAgIGlmICh0aGlzLmlzTW9kZWxUeXBlU3RyaW5nKSB7CiAgICAgICAgcmV0dXJuIFN0cmluZwogICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNb2RlbFR5cGVOdW1iZXIpIHsKICAgICAgICByZXR1cm4gTnVtYmVyCiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc01vZGVsVHlwZURhdGUpIHsKICAgICAgICByZXR1cm4gRGF0ZQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLm1kTW9kZWxUeXBlCiAgICAgIH0KICAgIH0sCiAgICBpc01vZGVsTnVsbCAoKSB7CiAgICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBudWxsIHx8IHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZAogICAgfSwKICAgIGlzTW9kZWxUeXBlU3RyaW5nICgpIHsKICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLnZhbHVlID09PSAnc3RyaW5nJwogICAgfSwKICAgIGlzTW9kZWxUeXBlTnVtYmVyICgpIHsKICAgICAgcmV0dXJuIE51bWJlci5pc0ludGVnZXIodGhpcy52YWx1ZSkgJiYgdGhpcy52YWx1ZSA+PSAwCiAgICB9LAogICAgaXNNb2RlbFR5cGVEYXRlICgpIHsKICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLnZhbHVlID09PSAnb2JqZWN0JyAmJiB0aGlzLnZhbHVlIGluc3RhbmNlb2YgRGF0ZSAmJiBpc1ZhbGlkKHRoaXMudmFsdWUpCiAgICB9LAogICAgbG9jYWxTdHJpbmcgKCkgewogICAgICByZXR1cm4gdGhpcy5sb2NhbERhdGUgJiYgZm9ybWF0KHRoaXMubG9jYWxEYXRlLCB0aGlzLmRhdGVGb3JtYXQpCiAgICB9LAogICAgbG9jYWxOdW1iZXIgKCkgewogICAgICByZXR1cm4gdGhpcy5sb2NhbERhdGUgJiYgTnVtYmVyKHRoaXMubG9jYWxEYXRlKQogICAgfSwKICAgIHBhcnNlZElucHV0RGF0ZSAoKSB7CiAgICAgIGNvbnN0IHBhcnNlZERhdGUgPSBwYXJzZSh0aGlzLmlucHV0RGF0ZSwgdGhpcy5kYXRlRm9ybWF0LCBuZXcgRGF0ZSgpKQogICAgICByZXR1cm4gcGFyc2VkRGF0ZSAmJiBpc1ZhbGlkKHBhcnNlZERhdGUpID8gcGFyc2VkRGF0ZSA6IG51bGwKICAgIH0sCiAgICBwYXR0ZXJuICgpIHsKICAgICAgcmV0dXJuIHRoaXMuZGF0ZUZvcm1hdC5yZXBsYWNlKC95eXl5fE1NfGRkL2csIG1hdGNoID0+IHsKICAgICAgICBzd2l0Y2ggKG1hdGNoKSB7CiAgICAgICAgY2FzZSAneXl5eSc6CiAgICAgICAgICByZXR1cm4gJ1swLTldezR9JwogICAgICAgIGNhc2UgJ01NJzoKICAgICAgICBjYXNlICdkZCc6CiAgICAgICAgICByZXR1cm4gJ1swLTldezJ9JwogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpbnB1dERhdGUgKHZhbHVlKSB7CiAgICAgIHRoaXMuaW5wdXREYXRlVG9Mb2NhbERhdGUoKQogICAgfSwKICAgIGxvY2FsRGF0ZSAoKSB7CiAgICAgIHRoaXMuaW5wdXREYXRlID0gdGhpcy5sb2NhbFN0cmluZwogICAgICBpZiAodGhpcy5tb2RlbFR5cGUgPT09IERhdGUpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMubG9jYWxEYXRlKQogICAgICB9CiAgICB9LAogICAgbG9jYWxTdHJpbmcgKCkgewogICAgICBpZiAodGhpcy5tb2RlbFR5cGUgPT09IFN0cmluZykgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5sb2NhbFN0cmluZykKICAgICAgfQogICAgfSwKICAgIGxvY2FsTnVtYmVyICgpIHsKICAgICAgaWYgKHRoaXMubW9kZWxUeXBlID09PSBOdW1iZXIpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMubG9jYWxOdW1iZXIpCiAgICAgIH0KICAgIH0sCiAgICB2YWx1ZTogewogICAgICBpbW1lZGlhdGU6IHRydWUsCiAgICAgIGhhbmRsZXIgKCkgewogICAgICAgIHRoaXMudmFsdWVEYXRlVG9Mb2NhbERhdGUoKQogICAgICB9CiAgICB9LAogICAgbWRNb2RlbFR5cGUgKHR5cGUpIHsKICAgICAgc3dpdGNoICh0eXBlKSB7CiAgICAgIGNhc2UgRGF0ZToKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMubG9jYWxEYXRlKQogICAgICAgIGJyZWFrCiAgICAgIGNhc2UgU3RyaW5nOgogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5sb2NhbFN0cmluZykKICAgICAgICBicmVhawogICAgICBjYXNlIE51bWJlcjoKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMubG9jYWxOdW1iZXIpCiAgICAgICAgYnJlYWsKICAgICAgfQogICAgfSwKICAgIGRhdGVGb3JtYXQgKCkgewogICAgICBpZiAodGhpcy5sb2NhbERhdGUpIHsKICAgICAgICB0aGlzLmlucHV0RGF0ZSA9IGZvcm1hdCh0aGlzLmxvY2FsRGF0ZSwgdGhpcy5kYXRlRm9ybWF0KQogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2dnbGVEaWFsb2cgKCkgewogICAgICBpZiAoIWlzRmlyZWZveCB8fCB0aGlzLm1kT3ZlcnJpZGVOYXRpdmUpIHsKICAgICAgICB0aGlzLnNob3dEaWFsb2cgPSAhdGhpcy5zaG93RGlhbG9nCiAgICAgICAgaWYgKHRoaXMuc2hvd0RpYWxvZykgewogICAgICAgICAgdGhpcy4kZW1pdCgnbWQtb3BlbmVkJykKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kZW1pdCgnbWQtY2xvc2VkJykKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC4kZWwuY2xpY2soKQogICAgICB9CiAgICB9LAogICAgb25Gb2N1cyAoKSB7CiAgICAgIGlmICh0aGlzLm1kT3Blbk9uRm9jdXMpIHsKICAgICAgICB0aGlzLnRvZ2dsZURpYWxvZygpCiAgICAgIH0KICAgIH0sCiAgICBpbnB1dERhdGVUb0xvY2FsRGF0ZSAoKSB7CiAgICAgIGlmICh0aGlzLmlucHV0RGF0ZSkgewogICAgICAgIGlmICh0aGlzLnBhcnNlZElucHV0RGF0ZSkgewogICAgICAgICAgdGhpcy5sb2NhbERhdGUgPSB0aGlzLnBhcnNlZElucHV0RGF0ZQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmxvY2FsRGF0ZSA9IG51bGwKICAgICAgfQogICAgfSwKICAgIHZhbHVlRGF0ZVRvTG9jYWxEYXRlICgpIHsKICAgICAgaWYgKHRoaXMuaXNNb2RlbE51bGwpIHsKICAgICAgICB0aGlzLmxvY2FsRGF0ZSA9IG51bGwKICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTW9kZWxUeXBlTnVtYmVyKSB7CiAgICAgICAgdGhpcy5sb2NhbERhdGUgPSBuZXcgRGF0ZSh0aGlzLnZhbHVlKQogICAgICB9IGVsc2UgaWYgKHRoaXMuaXNNb2RlbFR5cGVEYXRlKSB7CiAgICAgICAgdGhpcy5sb2NhbERhdGUgPSB0aGlzLnZhbHVlCiAgICAgIH0gZWxzZSBpZiAodGhpcy5pc01vZGVsVHlwZVN0cmluZykgewogICAgICAgIGxldCBwYXJzZWREYXRlID0gcGFyc2UodGhpcy52YWx1ZSwgdGhpcy5kYXRlRm9ybWF0LCBuZXcgRGF0ZSgpKQoKICAgICAgICBpZiAoaXNWYWxpZChwYXJzZWREYXRlKSkgewogICAgICAgICAgdGhpcy5sb2NhbERhdGUgPSBwYXJzZSh0aGlzLnZhbHVlLCB0aGlzLmRhdGVGb3JtYXQsIG5ldyBEYXRlKCkpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIFZ1ZS51dGlsLndhcm4oYFRoZSBkYXRlcGlja2VyIHZhbHVlIGlzIG5vdCBhIHZhbGlkIGRhdGUuIEdpdmVuIHZhbHVlOiAke3RoaXMudmFsdWV9LCBmb3JtYXQ6ICR7dGhpcy5kYXRlRm9ybWF0fWApCiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIFZ1ZS51dGlsLndhcm4oYFRoZSBkYXRlcGlja2VyIHZhbHVlIGlzIG5vdCBhIHZhbGlkIGRhdGUuIEdpdmVuIHZhbHVlOiAke3RoaXMudmFsdWV9YCkKICAgICAgfQogICAgfSwKICAgIG9uQ2xlYXIgKCkgewogICAgICB0aGlzLiRlbWl0KCdtZC1jbGVhcicpCiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuaW5wdXREYXRlVG9Mb2NhbERhdGUgPSBNZERlYm91bmNlKHRoaXMuaW5wdXREYXRlVG9Mb2NhbERhdGUsIHRoaXMuTWREZWJvdW5jZSkKICB9Cn0K"},{"version":3,"sources":["MdDatepicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"MdDatepicker.vue","sourceRoot":"node_modules/vue-material/src/components/MdDatepicker","sourcesContent":["<template>\n  <md-field :class=\"['md-datepicker', { 'md-native': !this.mdOverrideNative }]\" :md-clearable=\"mdClearable\" @md-clear=\"onClear\">\n    <md-date-icon class=\"md-date-icon\" @click.native=\"toggleDialog\" />\n    <md-input :type=\"type\" ref=\"input\" v-model=\"inputDate\" @focus.native=\"onFocus\" :pattern=\"pattern\" />\n\n    <slot />\n\n    <keep-alive>\n      <md-datepicker-dialog\n        v-if=\"showDialog\"\n        :md-date.sync=\"localDate\"\n        :md-disabled-dates=\"mdDisabledDates\"\n        :mdImmediately=\"mdImmediately\"\n        @md-closed=\"toggleDialog\"\n      />\n    </keep-alive>\n\n    <md-overlay class=\"md-datepicker-overlay\" md-fixed :md-active=\"showDialog\" @click=\"toggleDialog\" />\n  </md-field>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import isFirefox from 'is-firefox'\n  import format from 'date-fns/format'\n  import parse from 'date-fns/parse'\n  import isValid from 'date-fns/isValid'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n  import MdOverlay from 'components/MdOverlay/MdOverlay'\n  import MdDatepickerDialog from './MdDatepickerDialog'\n  import MdDateIcon from 'core/icons/MdDateIcon'\n  import MdDebounce from 'core/utils/MdDebounce'\n  import MdField from 'components/MdField/MdField'\n  import MdInput from 'components/MdField/MdInput/MdInput'\n\n  export default {\n    name: 'MdDatepicker',\n    components: {\n      MdOverlay,\n      MdDateIcon,\n      MdField,\n      MdInput,\n      MdDatepickerDialog\n    },\n    props: {\n      value: [String, Number, Date],\n      mdDisabledDates: [Array, Function],\n      mdOpenOnFocus: {\n        type: Boolean,\n        default: true\n      },\n      mdOverrideNative: {\n        type: Boolean,\n        default: true\n      },\n      mdImmediately: {\n        type: Boolean,\n        default: false\n      },\n      mdModelType: {\n        type: Function,\n        default: Date,\n        ...MdPropValidator('md-model-type', [Date, String, Number])\n      },\n      MdDebounce: {\n        type: Number,\n        default: 1000\n      },\n      mdClearable: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data: () => ({\n      showDialog: false,\n      // String for input\n      inputDate: '',\n      // Date for real value\n      localDate: null\n    }),\n    computed: {\n      locale () {\n        return this.$material.locale\n      },\n      type () {\n        return this.mdOverrideNative\n          ? 'text'\n          : 'date'\n      },\n      dateFormat () {\n        return this.locale.dateFormat || 'yyyy-MM-dd'\n      },\n      modelType () {\n        if (this.isModelTypeString) {\n          return String\n        } else if (this.isModelTypeNumber) {\n          return Number\n        } else if (this.isModelTypeDate) {\n          return Date\n        } else {\n          return this.mdModelType\n        }\n      },\n      isModelNull () {\n        return this.value === null || this.value === undefined\n      },\n      isModelTypeString () {\n        return typeof this.value === 'string'\n      },\n      isModelTypeNumber () {\n        return Number.isInteger(this.value) && this.value >= 0\n      },\n      isModelTypeDate () {\n        return typeof this.value === 'object' && this.value instanceof Date && isValid(this.value)\n      },\n      localString () {\n        return this.localDate && format(this.localDate, this.dateFormat)\n      },\n      localNumber () {\n        return this.localDate && Number(this.localDate)\n      },\n      parsedInputDate () {\n        const parsedDate = parse(this.inputDate, this.dateFormat, new Date())\n        return parsedDate && isValid(parsedDate) ? parsedDate : null\n      },\n      pattern () {\n        return this.dateFormat.replace(/yyyy|MM|dd/g, match => {\n          switch (match) {\n          case 'yyyy':\n            return '[0-9]{4}'\n          case 'MM':\n          case 'dd':\n            return '[0-9]{2}'\n          }\n        })\n      }\n    },\n    watch: {\n      inputDate (value) {\n        this.inputDateToLocalDate()\n      },\n      localDate () {\n        this.inputDate = this.localString\n        if (this.modelType === Date) {\n          this.$emit('input', this.localDate)\n        }\n      },\n      localString () {\n        if (this.modelType === String) {\n          this.$emit('input', this.localString)\n        }\n      },\n      localNumber () {\n        if (this.modelType === Number) {\n          this.$emit('input', this.localNumber)\n        }\n      },\n      value: {\n        immediate: true,\n        handler () {\n          this.valueDateToLocalDate()\n        }\n      },\n      mdModelType (type) {\n        switch (type) {\n        case Date:\n          this.$emit('input', this.localDate)\n          break\n        case String:\n          this.$emit('input', this.localString)\n          break\n        case Number:\n          this.$emit('input', this.localNumber)\n          break\n        }\n      },\n      dateFormat () {\n        if (this.localDate) {\n          this.inputDate = format(this.localDate, this.dateFormat)\n        }\n      }\n    },\n    methods: {\n      toggleDialog () {\n        if (!isFirefox || this.mdOverrideNative) {\n          this.showDialog = !this.showDialog\n          if (this.showDialog) {\n            this.$emit('md-opened')\n          } else {\n            this.$emit('md-closed')\n          }\n        } else {\n          this.$refs.input.$el.click()\n        }\n      },\n      onFocus () {\n        if (this.mdOpenOnFocus) {\n          this.toggleDialog()\n        }\n      },\n      inputDateToLocalDate () {\n        if (this.inputDate) {\n          if (this.parsedInputDate) {\n            this.localDate = this.parsedInputDate\n          }\n        } else {\n          this.localDate = null\n        }\n      },\n      valueDateToLocalDate () {\n        if (this.isModelNull) {\n          this.localDate = null\n        } else if (this.isModelTypeNumber) {\n          this.localDate = new Date(this.value)\n        } else if (this.isModelTypeDate) {\n          this.localDate = this.value\n        } else if (this.isModelTypeString) {\n          let parsedDate = parse(this.value, this.dateFormat, new Date())\n\n          if (isValid(parsedDate)) {\n            this.localDate = parse(this.value, this.dateFormat, new Date())\n          } else {\n            Vue.util.warn(`The datepicker value is not a valid date. Given value: ${this.value}, format: ${this.dateFormat}`)\n          }\n        } else {\n          Vue.util.warn(`The datepicker value is not a valid date. Given value: ${this.value}`)\n        }\n      },\n      onClear () {\n        this.$emit('md-clear')\n      }\n    },\n    created () {\n      this.inputDateToLocalDate = MdDebounce(this.inputDateToLocalDate, this.MdDebounce)\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n  @import \"~components/MdLayout/mixins\";\n\n  .md-datepicker-overlay {\n    opacity: 0;\n\n    @include md-layout-xsmall {\n      opacity: 1;\n    }\n  }\n\n  .md-datepicker {\n    &.md-native {\n      label {\n        top: 0 !important;\n      }\n    }\n\n    .md-date-icon {\n      cursor: pointer;\n    }\n\n    input[type=date]::-webkit-clear-button,\n    input[type=date]::-webkit-inner-spin-button,\n    input[type=date]::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n  }\n</style>\n"]}]}