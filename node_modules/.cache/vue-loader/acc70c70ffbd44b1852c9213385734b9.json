{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdField/MdInput/MdInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdField/MdInput/MdInput.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRVdWlkIGZyb20gJ2NvcmUvdXRpbHMvTWRVdWlkJwppbXBvcnQgTWRGaWVsZE1peGluIGZyb20gJy4uL01kRmllbGRNaXhpbicKCmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kSW5wdXQnLAogIG1peGluczogW01kRmllbGRNaXhpbl0sCiAgaW5qZWN0OiBbJ01kRmllbGQnXSwKICBwcm9wczogewogICAgaWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAoKSA9PiAnbWQtaW5wdXQtJyArIE1kVXVpZCgpCiAgICB9LAogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0ZXh0JwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRvZ2dsZVR5cGUgKCkgewogICAgICByZXR1cm4gdGhpcy5NZEZpZWxkLnRvZ2dsZVBhc3N3b3JkCiAgICB9LAogICAgaXNQYXNzd29yZCAoKSB7CiAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09ICdwYXNzd29yZCcKICAgIH0sCiAgICBsaXN0ZW5lcnMgKCkgewogICAgICB2YXIgbCA9IHsuLi50aGlzLiRsaXN0ZW5lcnN9CiAgICAgIGRlbGV0ZSBsLmlucHV0CiAgICAgIHJldHVybiBsCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdHlwZSAodHlwZSkgewogICAgICB0aGlzLnNldFBhc3N3b3JkKHRoaXMuaXNQYXNzd29yZCkKICAgIH0sCiAgICB0b2dnbGVUeXBlICh0b2dnbGUpIHsKICAgICAgaWYgKHRvZ2dsZSkgewogICAgICAgIHRoaXMuc2V0VHlwZVRleHQoKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2V0VHlwZVBhc3N3b3JkKCkKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgc2V0UGFzc3dvcmQgKHN0YXRlKSB7CiAgICAgIHRoaXMuTWRGaWVsZC5wYXNzd29yZCA9IHN0YXRlCiAgICAgIHRoaXMuTWRGaWVsZC50b2dnbGVQYXNzd29yZCA9IGZhbHNlCiAgICB9LAogICAgc2V0VHlwZVBhc3N3b3JkICgpIHsKICAgICAgdGhpcy4kZWwudHlwZSA9ICdwYXNzd29yZCcKICAgIH0sCiAgICBzZXRUeXBlVGV4dCAoKSB7CiAgICAgIHRoaXMuJGVsLnR5cGUgPSAndGV4dCcKICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewogICAgdGhpcy5zZXRQYXNzd29yZCh0aGlzLmlzUGFzc3dvcmQpCiAgfSwKICBiZWZvcmVEZXN0cm95ICgpIHsKICAgIHRoaXMuc2V0UGFzc3dvcmQoZmFsc2UpCiAgfQp9KQo="},{"version":3,"sources":["MdInput.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdInput.vue","sourceRoot":"node_modules/vue-material/src/components/MdField/MdInput","sourcesContent":["<template>\n  <input\n    class=\"md-input\"\n    v-model=\"model\"\n    v-bind=\"attributes\"\n    v-on=\"listeners\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\">\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdUuid from 'core/utils/MdUuid'\n  import MdFieldMixin from '../MdFieldMixin'\n\n  export default new MdComponent({\n    name: 'MdInput',\n    mixins: [MdFieldMixin],\n    inject: ['MdField'],\n    props: {\n      id: {\n        type: String,\n        default: () => 'md-input-' + MdUuid()\n      },\n      type: {\n        type: String,\n        default: 'text'\n      }\n    },\n    computed: {\n      toggleType () {\n        return this.MdField.togglePassword\n      },\n      isPassword () {\n        return this.type === 'password'\n      },\n      listeners () {\n        var l = {...this.$listeners}\n        delete l.input\n        return l\n      }\n    },\n    watch: {\n      type (type) {\n        this.setPassword(this.isPassword)\n      },\n      toggleType (toggle) {\n        if (toggle) {\n          this.setTypeText()\n        } else {\n          this.setTypePassword()\n        }\n      }\n    },\n    methods: {\n      setPassword (state) {\n        this.MdField.password = state\n        this.MdField.togglePassword = false\n      },\n      setTypePassword () {\n        this.$el.type = 'password'\n      },\n      setTypeText () {\n        this.$el.type = 'text'\n      }\n    },\n    created () {\n      this.setPassword(this.isPassword)\n    },\n    beforeDestroy () {\n      this.setPassword(false)\n    }\n  })\n</script>\n"]}]}