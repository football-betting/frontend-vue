{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdProgress/MdProgressSpinner/MdProgressSpinner.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRQcm9wVmFsaWRhdG9yIGZyb20gJ2NvcmUvdXRpbHMvTWRQcm9wVmFsaWRhdG9yJwoKY29uc3QgTWRQcm9ncmVzc1NwaW5uZXIgPSB7CiAgc3R5bGVUYWc6IG51bGwsCiAgZGlhbWV0ZXJzOiBuZXcgU2V0KCkKfQoKZXhwb3J0IGRlZmF1bHQgbmV3IE1kQ29tcG9uZW50KHsKICBuYW1lOiAnTWRQcm9ncmVzc1NwaW5uZXInLAogIHByb3BzOiB7CiAgICBtZFZhbHVlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIG1kRGlhbWV0ZXI6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA2MAogICAgfSwKICAgIG1kU3Ryb2tlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNgogICAgfSwKICAgIG1kTW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdkZXRlcm1pbmF0ZScsCiAgICAgIC4uLk1kUHJvcFZhbGlkYXRvcignbWQtbW9kZScsIFsKICAgICAgICAnZGV0ZXJtaW5hdGUnLAogICAgICAgICdpbmRldGVybWluYXRlJwogICAgICBdKQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzRGV0ZXJtaW5hdGUgKCkgewogICAgICByZXR1cm4gdGhpcy5tZE1vZGUgPT09ICdkZXRlcm1pbmF0ZScKICAgIH0sCiAgICBpc0luZGV0ZXJtaW5hdGUgKCkgewogICAgICByZXR1cm4gdGhpcy5tZE1vZGUgPT09ICdpbmRldGVybWluYXRlJwogICAgfSwKICAgIGlzSUUgKCkgewogICAgICBpZiAoIXRoaXMuJGlzU2VydmVyKSB7CiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygndHJpZGVudCcpCiAgICAgIH0KICAgICAgcmV0dXJuIGZhbHNlCiAgICB9LAogICAgcHJvZ3Jlc3NDbGFzc2VzICgpIHsKICAgICAgbGV0IGFuaW1hdGlvbkNsYXNzID0gJ21kLXByb2dyZXNzLXNwaW5uZXItaW5kZXRlcm1pbmF0ZScKCiAgICAgIGlmICh0aGlzLmlzSUUpIHsKICAgICAgICBhbmltYXRpb25DbGFzcyArPSAnLWZhbGxiYWNrJwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIFthbmltYXRpb25DbGFzc106IHRydWUsCiAgICAgICAgWydtZC0nICsgdGhpcy5tZE1vZGVdOiB0cnVlCiAgICAgIH0KICAgIH0sCiAgICBjaXJjbGVSYWRpdXMgKCkgewogICAgICByZXR1cm4gKHRoaXMubWREaWFtZXRlciAtIHRoaXMubWRTdHJva2UpIC8gMgogICAgfSwKICAgIGNpcmNsZVN0cm9rZVdpZHRoICgpIHsKICAgICAgcmV0dXJuIHRoaXMubWRTdHJva2UgKyAncHgnCiAgICB9LAogICAgY2lyY2xlQ2lyY3VtZmVyZW5jZSAoKSB7CiAgICAgIHJldHVybiAyICogTWF0aC5QSSAqIHRoaXMuY2lyY2xlUmFkaXVzCiAgICB9LAogICAgY2lyY2xlU3Ryb2tlRGFzaEFycmF5ICgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2lyY2xlQ2lyY3VtZmVyZW5jZSArICdweCcKICAgIH0sCiAgICBjaXJjbGVTdHJva2VEYXNoT2Zmc2V0ICgpIHsKICAgICAgaWYgKHRoaXMuaXNEZXRlcm1pbmF0ZSkgewogICAgICAgIHJldHVybiB0aGlzLmNpcmNsZUNpcmN1bWZlcmVuY2UgKiAoMTAwIC0gdGhpcy5tZFZhbHVlKSAvIDEwMCArICdweCcKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaXNJbmRldGVybWluYXRlICYmIHRoaXMuaXNJRSkgewogICAgICAgIHJldHVybiB0aGlzLmNpcmNsZUNpcmN1bWZlcmVuY2UgKiAwLjIgKyAncHgnCiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbWRWYWx1ZSAoKSB7CiAgICAgIHRoaXMuYXR0YWNoQ2lyY2xlU3R5bGUoKQogICAgfSwKICAgIG1kRGlhbWV0ZXIgKCkgewogICAgICB0aGlzLmF0dGFjaFN2Z1N0eWxlKCkKICAgICAgdGhpcy5hdHRhY2hDaXJjbGVTdHlsZSgpCiAgICB9LAogICAgbWRTdHJva2UgKCkgewogICAgICB0aGlzLmF0dGFjaENpcmNsZVN0eWxlKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGF0dGFjaFN2Z1N0eWxlICgpIHsKICAgICAgY29uc3Qgc3ZnID0gdGhpcy4kcmVmc1snbWQtcHJvZ3Jlc3Mtc3Bpbm5lci1kcmF3J10KICAgICAgY29uc3Qgc2l6ZSA9IGAke3RoaXMubWREaWFtZXRlcn1weGAKICAgICAgc3ZnLnN0eWxlLndpZHRoID0gc2l6ZQogICAgICBzdmcuc3R5bGUuaGVpZ2h0ID0gc2l6ZQogICAgfSwKICAgIGF0dGFjaENpcmNsZVN0eWxlICgpIHsKICAgICAgY29uc3QgY2lyY2xlID0gdGhpcy4kcmVmc1snbWQtcHJvZ3Jlc3Mtc3Bpbm5lci1jaXJjbGUnXQogICAgICBjaXJjbGUuc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IHRoaXMuY2lyY2xlU3Ryb2tlRGFzaE9mZnNldAogICAgICBjaXJjbGUuc3R5bGUuc3Ryb2tlRGFzaGFycmF5ID0gdGhpcy5jaXJjbGVTdHJva2VEYXNoQXJyYXkKICAgICAgY2lyY2xlLnN0eWxlLnN0cm9rZVdpZHRoID0gdGhpcy5jaXJjbGVTdHJva2VXaWR0aAogICAgICBjaXJjbGUuc3R5bGUuc2V0UHJvcGVydHkoJy0tbWQtcHJvZ3Jlc3Mtc3Bpbm5lci1zdGFydC12YWx1ZScsIDAuOTUgKiB0aGlzLmNpcmNsZUNpcmN1bWZlcmVuY2UpCiAgICAgIGNpcmNsZS5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1tZC1wcm9ncmVzcy1zcGlubmVyLWVuZC12YWx1ZScsIDAuMiAqIHRoaXMuY2lyY2xlQ2lyY3VtZmVyZW5jZSkKICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5hdHRhY2hTdmdTdHlsZSgpCiAgICB0aGlzLmF0dGFjaENpcmNsZVN0eWxlKCkKICB9Cn0pCg=="},{"version":3,"sources":["MdProgressSpinner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdProgressSpinner.vue","sourceRoot":"node_modules/vue-material/src/components/MdProgress/MdProgressSpinner","sourcesContent":["<template>\n  <transition name=\"md-progress-spinner\" appear>\n    <div class=\"md-progress-spinner\" :class=\"[progressClasses, $mdActiveTheme]\">\n      <svg\n        class=\"md-progress-spinner-draw\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        focusable=\"false\"\n        :viewBox=\"`0 0 ${mdDiameter} ${mdDiameter}`\"\n        ref=\"md-progress-spinner-draw\">\n        <circle class=\"md-progress-spinner-circle\" cx=\"50%\" cy=\"50%\" :r=\"circleRadius\" ref=\"md-progress-spinner-circle\"></circle>\n      </svg>\n    </div>\n  </transition>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  const MdProgressSpinner = {\n    styleTag: null,\n    diameters: new Set()\n  }\n\n  export default new MdComponent({\n    name: 'MdProgressSpinner',\n    props: {\n      mdValue: {\n        type: Number,\n        default: 0\n      },\n      mdDiameter: {\n        type: Number,\n        default: 60\n      },\n      mdStroke: {\n        type: Number,\n        default: 6\n      },\n      mdMode: {\n        type: String,\n        default: 'determinate',\n        ...MdPropValidator('md-mode', [\n          'determinate',\n          'indeterminate'\n        ])\n      }\n    },\n    computed: {\n      isDeterminate () {\n        return this.mdMode === 'determinate'\n      },\n      isIndeterminate () {\n        return this.mdMode === 'indeterminate'\n      },\n      isIE () {\n        if (!this.$isServer) {\n          return navigator.userAgent.toLowerCase().includes('trident')\n        }\n        return false\n      },\n      progressClasses () {\n        let animationClass = 'md-progress-spinner-indeterminate'\n\n        if (this.isIE) {\n          animationClass += '-fallback'\n        }\n\n        return {\n          [animationClass]: true,\n          ['md-' + this.mdMode]: true\n        }\n      },\n      circleRadius () {\n        return (this.mdDiameter - this.mdStroke) / 2\n      },\n      circleStrokeWidth () {\n        return this.mdStroke + 'px'\n      },\n      circleCircumference () {\n        return 2 * Math.PI * this.circleRadius\n      },\n      circleStrokeDashArray () {\n        return this.circleCircumference + 'px'\n      },\n      circleStrokeDashOffset () {\n        if (this.isDeterminate) {\n          return this.circleCircumference * (100 - this.mdValue) / 100 + 'px'\n        }\n\n        if (this.isIndeterminate && this.isIE) {\n          return this.circleCircumference * 0.2 + 'px'\n        }\n\n        return null\n      }\n    },\n    watch: {\n      mdValue () {\n        this.attachCircleStyle()\n      },\n      mdDiameter () {\n        this.attachSvgStyle()\n        this.attachCircleStyle()\n      },\n      mdStroke () {\n        this.attachCircleStyle()\n      }\n    },\n    methods: {\n      attachSvgStyle () {\n        const svg = this.$refs['md-progress-spinner-draw']\n        const size = `${this.mdDiameter}px`\n        svg.style.width = size\n        svg.style.height = size\n      },\n      attachCircleStyle () {\n        const circle = this.$refs['md-progress-spinner-circle']\n        circle.style.strokeDashoffset = this.circleStrokeDashOffset\n        circle.style.strokeDasharray = this.circleStrokeDashArray\n        circle.style.strokeWidth = this.circleStrokeWidth\n        circle.style.setProperty('--md-progress-spinner-start-value', 0.95 * this.circleCircumference)\n        circle.style.setProperty('--md-progress-spinner-end-value', 0.2 * this.circleCircumference)\n      }\n    },\n    mounted () {\n      this.attachSvgStyle()\n      this.attachCircleStyle()\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  @keyframes md-progress-spinner-rotate {\n    0% {\n      transform: rotate(0)\n    }\n\n    100% {\n      transform: rotate(360deg)\n    }\n  }\n\n  @keyframes md-progress-spinner-initial-rotate {\n    0% {\n      opacity: 0;\n      transform: rotate(-90deg) translateZ(0);\n    }\n\n    20% {\n      opacity: 1;\n    }\n\n    100% {\n      transform: rotate(270deg) translateZ(0);\n    }\n  }\n\n  @keyframes md-progress-spinner-stroke-rotate-fallback {\n    0% {\n      transform: rotate(0)\n    }\n    25% {\n      transform: rotate(1170deg)\n    }\n    50% {\n      transform: rotate(2340deg)\n    }\n    75% {\n      transform: rotate(3510deg)\n    }\n    100% {\n      transform: rotate(4680deg)\n    }\n  }\n\n  @keyframes md-progress-spinner-stroke-rotate {\n    0% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(0);\n    }\n\n    12.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(0);\n    }\n\n    12.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(72.5deg);\n    }\n\n    25.1% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(270deg);\n    }\n\n    37.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(270deg);\n    }\n\n    37.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(161.5deg);\n    }\n\n    50.01% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(180deg);\n    }\n\n    62.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(180deg);\n    }\n\n    62.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(251.5deg);\n    }\n\n    75.01% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotate(90deg);\n    }\n\n    87.5% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotate(90deg);\n    }\n\n    87.51% {\n      stroke-dashoffset: var(--md-progress-spinner-end-value);\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n\n    100% {\n      stroke-dashoffset: var(--md-progress-spinner-start-value);\n      transform: rotateX(180deg) rotate(341.5deg);\n    }\n  }\n\n  .md-progress-spinner {\n    display: inline-flex;\n    position: relative;\n\n    &.md-indeterminate {\n      animation: md-progress-spinner-rotate 2s linear infinite;\n\n      &.md-progress-spinner-enter,\n      &.md-progress-spinner-leave-to {\n        .md-progress-spinner-draw {\n          opacity: 0;\n          transform: scale(.1);\n        }\n      }\n\n      &.md-progress-spinner-enter-active,\n      &.md-progress-spinner-leave-active {\n        transition-duration: .4s;\n        animation: none;\n      }\n\n      .md-progress-spinner-circle {\n        animation: 4s infinite $md-transition-stand-timing;\n        animation-name: md-progress-spinner-stroke-rotate;\n      }\n    }\n\n    &.md-determinate {\n      &.md-progress-spinner-enter-active {\n        transition-duration: 2s;\n\n        .md-progress-spinner-draw {\n          animation: md-progress-spinner-initial-rotate 1.98s $md-transition-stand-timing forwards;\n        }\n      }\n\n      &.md-progress-spinner-leave-active {\n        transition-duration: 2s;\n\n        .md-progress-spinner-draw {\n          animation: md-progress-spinner-initial-rotate reverse 1.98s $md-transition-stand-timing forwards;\n        }\n      }\n\n      .md-progress-spinner-draw {\n        transition: none;\n      }\n    }\n  }\n\n  .md-progress-spinner-draw {\n    overflow: visible;\n    transform: scale(1) rotate(-90deg);\n    transform-origin: center;\n    transition: .4s $md-transition-stand-timing;\n    will-change: opacity, transform;\n  }\n\n  .md-progress-spinner-circle {\n    fill: none;\n    transform-origin: center;\n    transition: stroke-dashoffset .25s $md-transition-stand-timing;\n    will-change: stroke-dashoffset, stroke-dasharray, stroke-width, animation-name, r;\n  }\n</style>\n"]}]}