{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdApp/MdAppDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdApp/MdAppDrawer.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWRBcHBEcmF3ZXInLAogIGluamVjdDogWydNZEFwcCddLAogIGRhdGE6ICgpID0+ICh7CiAgICBkcmF3ZXJFbGVtZW50OiB7CiAgICAgIG1kQWN0aXZlOiBudWxsLAogICAgICBtb2RlOiBudWxsLAogICAgICBzdWJtb2RlOiBudWxsCiAgICB9LAogICAgaW5pdGlhbGl6ZWQ6IGZhbHNlCiAgfSksCiAgcHJvcHM6IHsKICAgIG1kUmlnaHQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtZEFjdGl2ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHZpc2libGUgKCkgewogICAgICByZXR1cm4gdGhpcy5kcmF3ZXJFbGVtZW50Lm1kQWN0aXZlCiAgICB9LAogICAgbW9kZSAoKSB7CiAgICAgIHJldHVybiB0aGlzLmRyYXdlckVsZW1lbnQubW9kZQogICAgfSwKICAgIHN1Ym1vZGUgKCkgewogICAgICByZXR1cm4gdGhpcy5kcmF3ZXJFbGVtZW50LnN1Ym1vZGUKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgdmlzaWJsZSAodmlzaWJsZSkgewogICAgICB0aGlzLk1kQXBwLmRyYXdlci53aWR0aCA9IHRoaXMuZ2V0RHJhd2VyV2lkdGgoKQogICAgICB0aGlzLk1kQXBwLmRyYXdlci5hY3RpdmUgPSB2aXNpYmxlCiAgICB9LAogICAgbW9kZSAobW9kZSkgewogICAgICB0aGlzLk1kQXBwLmRyYXdlci5tb2RlID0gbW9kZQogICAgfSwKICAgIHN1Ym1vZGUgKHN1Ym1vZGUpIHsKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuc3VibW9kZSA9IHN1Ym1vZGUKICAgIH0sCiAgICBtZFJpZ2h0IChyaWdodCkgewogICAgICB0aGlzLk1kQXBwLmRyYXdlci5yaWdodCA9IHJpZ2h0CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREcmF3ZXJXaWR0aCAoKSB7CiAgICAgIGlmICh0aGlzLiRlbCkgewogICAgICAgIHJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLiRlbCkud2lkdGgKICAgICAgfQoKICAgICAgcmV0dXJuIDAKICAgIH0sCiAgICB1cGRhdGVEcmF3ZXJEYXRhICgpIHsKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIud2lkdGggPSB0aGlzLmdldERyYXdlcldpZHRoKCkKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuYWN0aXZlID0gdGhpcy52aXNpYmxlCiAgICAgIHRoaXMuTWRBcHAuZHJhd2VyLm1vZGUgPSB0aGlzLm1vZGUKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuc3VibW9kZSA9IHRoaXMuc3VibW9kZQogICAgICB0aGlzLk1kQXBwLmRyYXdlci5yaWdodCA9IHRoaXMubWRSaWdodAogICAgfSwKICAgIGNsZWFyRHJhd2VyRGF0YSAoKSB7CiAgICAgIHRoaXMuTWRBcHAuZHJhd2VyLndpZHRoID0gMAogICAgICB0aGlzLk1kQXBwLmRyYXdlci5hY3RpdmUgPSBmYWxzZQogICAgICB0aGlzLk1kQXBwLmRyYXdlci5tb2RlID0gJ3RlbXBvcmFyeScKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuc3VibW9kZSA9IG51bGwKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuaW5pdGlhbFdpZHRoID0gMAogICAgfSwKICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy4kbmV4dFRpY2soKS50aGVuKCgpID0+IHsKICAgICAgdGhpcy5NZEFwcC5kcmF3ZXIuaW5pdGlhbFdpZHRoID0gdGhpcy4kZWwub2Zmc2V0V2lkdGgKICAgICAgdGhpcy5kcmF3ZXJFbGVtZW50ID0gdGhpcy4kcmVmcy5kcmF3ZXIKICAgICAgdGhpcy51cGRhdGVEcmF3ZXJEYXRhKCkKICAgICAgdGhpcy5pbml0aWFsaXplZCA9IHRydWUKICAgIH0pCiAgfSwKICB1cGRhdGVkICgpIHsKICAgIHRoaXMuZHJhd2VyRWxlbWVudCA9IHRoaXMuJHJlZnMuZHJhd2VyCiAgfSwKICBiZWZvcmVEZXN0cm95ICgpIHsKICAgIHRoaXMuY2xlYXJEcmF3ZXJEYXRhKCkKICB9Cn0K"},{"version":3,"sources":["MdAppDrawer.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdAppDrawer.vue","sourceRoot":"node_modules/vue-material/src/components/MdApp","sourcesContent":["<template>\n  <md-drawer class=\"md-app-drawer\" :md-active=\"mdActive && initialized\" v-bind=\"$attrs\" v-on=\"$listeners\" :md-right=\"mdRight\" ref=\"drawer\">\n    <slot />\n  </md-drawer>\n</template>\n\n<script>\n  export default {\n    name: 'MdAppDrawer',\n    inject: ['MdApp'],\n    data: () => ({\n      drawerElement: {\n        mdActive: null,\n        mode: null,\n        submode: null\n      },\n      initialized: false\n    }),\n    props: {\n      mdRight: {\n        type: Boolean,\n        default: false\n      },\n      mdActive: {\n        type: Boolean,\n        default: false\n      }\n    },\n    computed: {\n      visible () {\n        return this.drawerElement.mdActive\n      },\n      mode () {\n        return this.drawerElement.mode\n      },\n      submode () {\n        return this.drawerElement.submode\n      },\n    },\n    watch: {\n      visible (visible) {\n        this.MdApp.drawer.width = this.getDrawerWidth()\n        this.MdApp.drawer.active = visible\n      },\n      mode (mode) {\n        this.MdApp.drawer.mode = mode\n      },\n      submode (submode) {\n        this.MdApp.drawer.submode = submode\n      },\n      mdRight (right) {\n        this.MdApp.drawer.right = right\n      }\n    },\n    methods: {\n      getDrawerWidth () {\n        if (this.$el) {\n          return window.getComputedStyle(this.$el).width\n        }\n\n        return 0\n      },\n      updateDrawerData () {\n        this.MdApp.drawer.width = this.getDrawerWidth()\n        this.MdApp.drawer.active = this.visible\n        this.MdApp.drawer.mode = this.mode\n        this.MdApp.drawer.submode = this.submode\n        this.MdApp.drawer.right = this.mdRight\n      },\n      clearDrawerData () {\n        this.MdApp.drawer.width = 0\n        this.MdApp.drawer.active = false\n        this.MdApp.drawer.mode = 'temporary'\n        this.MdApp.drawer.submode = null\n        this.MdApp.drawer.initialWidth = 0\n      },\n    },\n    mounted () {\n      this.$nextTick().then(() => {\n        this.MdApp.drawer.initialWidth = this.$el.offsetWidth\n        this.drawerElement = this.$refs.drawer\n        this.updateDrawerData()\n        this.initialized = true\n      })\n    },\n    updated () {\n      this.drawerElement = this.$refs.drawer\n    },\n    beforeDestroy () {\n      this.clearDrawerData()\n    }\n  }\n</script>\n"]}]}