{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdDrawer/MdDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdDrawer/MdDrawer.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRPdmVybGF5IGZyb20gJ2NvbXBvbmVudHMvTWRPdmVybGF5L01kT3ZlcmxheScKaW1wb3J0IE1kUHJvcFZhbGlkYXRvciBmcm9tICdjb3JlL3V0aWxzL01kUHJvcFZhbGlkYXRvcicKCmltcG9ydCBNZFN3aXBlYWJsZSBmcm9tICdjb3JlL21peGlucy9NZFN3aXBlYWJsZS9NZFN3aXBlYWJsZScKCmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kRHJhd2VyJywKICBtaXhpbnM6IFtNZFN3aXBlYWJsZV0sCiAgY29tcG9uZW50czogewogICAgTWRPdmVybGF5CiAgfSwKICBwcm9wczogewogICAgbWRSaWdodDogQm9vbGVhbiwKICAgIG1kUGVybWFuZW50OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgLi4uTWRQcm9wVmFsaWRhdG9yKCdtZC1wZXJtYW5lbnQnLCBbCiAgICAgICAgJ2Z1bGwnLAogICAgICAgICdjbGlwcGVkJywKICAgICAgICAnY2FyZCcKICAgICAgXSkKICAgIH0sCiAgICBtZFBlcnNpc3RlbnQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAuLi5NZFByb3BWYWxpZGF0b3IoJ21kLXBlcnNpc3RlbnQnLCBbCiAgICAgICAgJ21pbmknLAogICAgICAgICdmdWxsJwogICAgICBdKQogICAgfSwKICAgIG1kQWN0aXZlOiBCb29sZWFuLAogICAgbWRGaXhlZDogQm9vbGVhbgogIH0sCiAgd2F0Y2g6IHsKICAgIG1kQWN0aXZlICh2aXNpYmxlKSB7CiAgICAgIGlmICh2aXNpYmxlKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnbWQtb3BlbmVkJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCdtZC1jbG9zZWQnKQogICAgICB9CiAgICB9LAogICAgc3dpcGVkICh2YWx1ZSkgewogICAgICBpZiAodmFsdWUgPT09ICdyaWdodCcgfHwgdmFsdWUgPT09ICdsZWZ0JykgewogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTptZEFjdGl2ZScsIHZhbHVlID09PSAncmlnaHQnKQogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZHJhd2VyQ2xhc3NlcyAoKSB7CiAgICAgIGxldCBjbGFzc2VzID0gewogICAgICAgICdtZC1sZWZ0JzogIXRoaXMubWRSaWdodCwKICAgICAgICAnbWQtcmlnaHQnOiB0aGlzLm1kUmlnaHQsCiAgICAgICAgJ21kLXRlbXBvcmFyeSc6IHRoaXMuaXNUZW1wb3JhcnksCiAgICAgICAgJ21kLXBlcnNpc3RlbnQnOiB0aGlzLm1kUGVyc2lzdGVudCwKICAgICAgICAnbWQtcGVybWFuZW50JzogdGhpcy5tZFBlcm1hbmVudCwKICAgICAgICAnbWQtYWN0aXZlJzogdGhpcy5tZEFjdGl2ZSwKICAgICAgICAnbWQtZml4ZWQnOiB0aGlzLm1kRml4ZWQKICAgICAgfQoKICAgICAgaWYgKHRoaXMubWRQZXJtYW5lbnQpIHsKICAgICAgICBjbGFzc2VzWydtZC1wZXJtYW5lbnQtJyArIHRoaXMubWRQZXJtYW5lbnRdID0gdHJ1ZQogICAgICB9CgogICAgICBpZiAodGhpcy5tZFBlcnNpc3RlbnQpIHsKICAgICAgICBjbGFzc2VzWydtZC1wZXJzaXN0ZW50LScgKyB0aGlzLm1kUGVyc2lzdGVudF0gPSB0cnVlCiAgICAgIH0KCiAgICAgIHJldHVybiBjbGFzc2VzCiAgICB9LAogICAgaXNUZW1wb3JhcnkgKCkgewogICAgICByZXR1cm4gIXRoaXMubWRQZXJtYW5lbnQgJiYgIXRoaXMubWRQZXJzaXN0ZW50CiAgICB9LAogICAgbW9kZSAoKSB7CiAgICAgIGlmICh0aGlzLm1kUGVyc2lzdGVudCkgewogICAgICAgIHJldHVybiAncGVyc2lzdGVudCcKICAgICAgfQoKICAgICAgaWYgKHRoaXMubWRQZXJtYW5lbnQpIHsKICAgICAgICByZXR1cm4gJ3Blcm1hbmVudCcKICAgICAgfQoKICAgICAgcmV0dXJuICd0ZW1wb3JhcnknCiAgICB9LAogICAgc3VibW9kZSAoKSB7CiAgICAgIGlmICh0aGlzLm1kUGVyc2lzdGVudCkgewogICAgICAgIHJldHVybiB0aGlzLm1kUGVyc2lzdGVudAogICAgICB9CgogICAgICBpZiAodGhpcy5tZFBlcm1hbmVudCkgewogICAgICAgIHJldHVybiB0aGlzLm1kUGVybWFuZW50CiAgICAgIH0KICAgIH0sCiAgICBtZFN3aXBlRWxlbWVudCAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRlbC5wYXJlbnROb2RlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjbG9zZURyYXdlciAoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTptZEFjdGl2ZScsIGZhbHNlKQogICAgfQogIH0KfSkK"},{"version":3,"sources":["MdDrawer.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdDrawer.vue","sourceRoot":"node_modules/vue-material/src/components/MdDrawer","sourcesContent":["<template>\n  <div class=\"md-drawer\" :class=\"[$mdActiveTheme, drawerClasses]\">\n    <slot />\n    <md-overlay :md-active=\"mdActive\" @click=\"closeDrawer\" v-if=\"mdFixed\" />\n    <md-overlay :md-active=\"mdActive\" @click=\"closeDrawer\" md-attach-to-parent v-else />\n  </div>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdOverlay from 'components/MdOverlay/MdOverlay'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  import MdSwipeable from 'core/mixins/MdSwipeable/MdSwipeable'\n\n  export default new MdComponent({\n    name: 'MdDrawer',\n    mixins: [MdSwipeable],\n    components: {\n      MdOverlay\n    },\n    props: {\n      mdRight: Boolean,\n      mdPermanent: {\n        type: String,\n        ...MdPropValidator('md-permanent', [\n          'full',\n          'clipped',\n          'card'\n        ])\n      },\n      mdPersistent: {\n        type: String,\n        ...MdPropValidator('md-persistent', [\n          'mini',\n          'full'\n        ])\n      },\n      mdActive: Boolean,\n      mdFixed: Boolean\n    },\n    watch: {\n      mdActive (visible) {\n        if (visible) {\n          this.$emit('md-opened')\n        } else {\n          this.$emit('md-closed')\n        }\n      },\n      swiped (value) {\n        if (value === 'right' || value === 'left') {\n          this.$emit('update:mdActive', value === 'right')\n        }\n      }\n    },\n    computed: {\n      drawerClasses () {\n        let classes = {\n          'md-left': !this.mdRight,\n          'md-right': this.mdRight,\n          'md-temporary': this.isTemporary,\n          'md-persistent': this.mdPersistent,\n          'md-permanent': this.mdPermanent,\n          'md-active': this.mdActive,\n          'md-fixed': this.mdFixed\n        }\n\n        if (this.mdPermanent) {\n          classes['md-permanent-' + this.mdPermanent] = true\n        }\n\n        if (this.mdPersistent) {\n          classes['md-persistent-' + this.mdPersistent] = true\n        }\n\n        return classes\n      },\n      isTemporary () {\n        return !this.mdPermanent && !this.mdPersistent\n      },\n      mode () {\n        if (this.mdPersistent) {\n          return 'persistent'\n        }\n\n        if (this.mdPermanent) {\n          return 'permanent'\n        }\n\n        return 'temporary'\n      },\n      submode () {\n        if (this.mdPersistent) {\n          return this.mdPersistent\n        }\n\n        if (this.mdPermanent) {\n          return this.mdPermanent\n        }\n      },\n      mdSwipeElement () {\n        return this.$el.parentNode\n      }\n    },\n    methods: {\n      closeDrawer () {\n        this.$emit('update:mdActive', false)\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n  @import \"~components/MdLayout/mixins\";\n  @import \"~components/MdElevation/mixins\";\n  @import \"~components/MdCard/base\";\n\n  @mixin md-drawer-base () {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  @mixin md-drawer-temporary () {\n    @include md-drawer-base;\n    z-index: 30;\n    transform: translate3D(-100%, 0, 0);\n    transition: transform .4s $md-transition-stand-timing;\n    will-change: transform, box-shadow;\n  }\n\n  @mixin md-drawer-temporary-active () {\n    transform: translate3D(0, 0, 0);\n    transition-timing-function: $md-transition-default-timing;\n\n    @include md-layout-xsmall {\n      @include md-elevation(16);\n    }\n  }\n\n  .md-drawer {\n    @include md-drawer-temporary;\n    width: 400px;\n    max-width: calc(100vw - 56px);\n    overflow-x: hidden;\n    overflow-y: auto;\n\n    @include md-layout-xsmall {\n      width: 320px;\n    }\n\n    &.md-right {\n      right: 0;\n      left: auto;\n      transform: translate3D(100%, 0, 0);\n    }\n\n    &.md-fixed {\n      position: fixed;\n    }\n\n    &.md-active {\n      @include md-drawer-temporary-active;\n    }\n\n    &:not(.md-temporary) {\n      ~ .md-overlay {\n        @include md-layout-small-and-up {\n          background: none;\n          pointer-events: none;\n        }\n      }\n    }\n\n    &.md-temporary {\n      &.md-left {\n        + .md-app-container .md-content {\n          border-left: none;\n        }\n      }\n\n      &.md-right-previous {\n        + .md-app-container .md-content {\n          border-right: none;\n        }\n      }\n\n      &.md-active {\n        @include md-elevation(16);\n      }\n    }\n\n    &.md-permanent {\n      @include md-layout-small-and-up {\n        position: relative;\n        transform: translate3D(0, 0, 0);\n      }\n    }\n\n    &.md-permanent-full {\n      @include md-layout-small-and-up {\n        z-index: 3;\n\n        .md-list {\n          padding-top: 0;\n        }\n      }\n    }\n\n    &.md-permanent-clipped,\n    &.md-permanent-card {\n      @include md-layout-small-and-up {\n        z-index: 1;\n      }\n    }\n\n    &.md-permanent-card {\n      @include md-layout-small-and-up {\n        @include md-card;\n        margin: 8px;\n        z-index: 1;\n      }\n\n      @include md-layout-medium-and-up {\n        margin: 16px;\n      }\n\n      @include md-layout-large-and-up {\n        margin: 24px;\n      }\n    }\n\n    &.md-persistent {\n      &:not(.md-active) {\n        &.md-left {\n          + .md-app-container .md-content {\n            border-left: none;\n          }\n        }\n\n        &.md-right-previous {\n          + .md-app-container .md-content {\n            border-right: none;\n          }\n        }\n      }\n    }\n\n    &.md-persistent-mini {\n      transform: translate3D(0, 64px, 0);\n      transition: .3s $md-transition-stand-timing;\n      transition-property: transform, width;\n      will-change: transform, box-shadow;\n\n      &.md-left {\n        border-right: 1px solid;\n      }\n\n      &.md-right {\n        border-left: 1px solid;\n      }\n\n      &.md-active {\n        &.md-left {\n          + .md-app-container .md-content {\n            border-left: none;\n          }\n        }\n\n        &.md-right-previous {\n          + .md-app-container .md-content {\n            border-right: none;\n          }\n        }\n      }\n\n      &:not(.md-active) {\n        width: 70px !important;\n        z-index: 1;\n        white-space: nowrap;\n\n        .md-toolbar {\n          display: none;\n        }\n\n        .md-list-item-content {\n          padding: 0 23px;\n        }\n      }\n\n      &.md-active {\n        position: relative;\n        transform: translate3D(0, 0, 0);\n        white-space: normal;\n      }\n    }\n\n    .md-list-item-container {\n      font-size: 14px;\n      text-transform: none;\n    }\n  }\n</style>\n"]}]}