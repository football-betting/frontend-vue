{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdField/MdTextarea/MdTextarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdField/MdTextarea/MdTextarea.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRVdWlkIGZyb20gJ2NvcmUvdXRpbHMvTWRVdWlkJwppbXBvcnQgTWRGaWVsZE1peGluIGZyb20gJy4uL01kRmllbGRNaXhpbicKCmZ1bmN0aW9uIGNhbGN1bGF0ZUNvbnRlbnRIZWlnaHQgKGVsLCBsaW5lSGVpZ2h0KSB7CiAgY29uc3Qgb3JpZ0hlaWdodCA9IGVsLnN0eWxlLmhlaWdodAogIGNvbnN0IGhlaWdodCA9IGVsLm9mZnNldEhlaWdodAogIGNvbnN0IHNjcm9sbEhlaWdodCA9IGVsLnNjcm9sbEhlaWdodAoKICBlbC5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nCgogIGlmIChoZWlnaHQgPj0gc2Nyb2xsSGVpZ2h0KSB7CiAgICBlbC5zdHlsZS5oZWlnaHQgPSAoaGVpZ2h0ICsgbGluZUhlaWdodCkgKyAncHgnCgogICAgaWYgKHNjcm9sbEhlaWdodCA8IGVsLnNjcm9sbEhlaWdodCkgewogICAgICBlbC5zdHlsZS5oZWlnaHQgPSBvcmlnSGVpZ2h0CgogICAgICByZXR1cm4gaGVpZ2h0CiAgICB9CiAgfQoKICByZXR1cm4gc2Nyb2xsSGVpZ2h0Cn0KCmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kVGV4dGFyZWEnLAogIG1peGluczogW01kRmllbGRNaXhpbl0sCiAgaW5qZWN0OiBbJ01kRmllbGQnXSwKICBwcm9wczogewogICAgaWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAoKSA9PiAnbWQtdGV4dGFyZWEtJyArIE1kVXVpZCgpCiAgICB9LAogICAgbWRBdXRvZ3JvdzogQm9vbGVhbgogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxpc3RlbmVycyAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgLi4udGhpcy4kbGlzdGVuZXJzLAogICAgICAgIGlucHV0OiB0aGlzLm9uSW5wdXQKICAgICAgfQogICAgfSwKICAgIHRleHRhcmVhU3R5bGVzICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBoZWlnaHQ6IHRoaXMudGV4dGFyZWFIZWlnaHQKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VGV4dEFyZWFMaW5lU2l6ZSAoKSB7CiAgICAgIGNvbnN0IHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy4kZWwpCgogICAgICByZXR1cm4gcGFyc2VJbnQoc3R5bGUubGluZUhlaWdodCwgMTApCiAgICB9LAogICAgc2V0VGV4dEFyZWFTaXplIChoZWlnaHQpIHsKICAgICAgbGV0IG5ld0hlaWdodCA9IGhlaWdodAoKICAgICAgaWYgKCFoZWlnaHQpIHsKICAgICAgICBjb25zdCBzaXplID0gdGhpcy5nZXRUZXh0QXJlYUxpbmVTaXplKCkKCiAgICAgICAgbmV3SGVpZ2h0ID0gY2FsY3VsYXRlQ29udGVudEhlaWdodCh0aGlzLiRlbCwgc2l6ZSkKICAgICAgfQoKICAgICAgdGhpcy50ZXh0YXJlYUhlaWdodCA9IG5ld0hlaWdodCArICdweCcKICAgIH0sCiAgICBhcHBseVN0eWxlcyAoKSB7CiAgICAgIGlmICh0aGlzLm1kQXV0b2dyb3cpIHsKICAgICAgICB0aGlzLnNldFRleHRBcmVhU2l6ZSgzMikKICAgICAgICB0aGlzLiRuZXh0VGljaygpLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy5zZXRUZXh0QXJlYVNpemUoKQogICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICB0aGlzLiRlbC5zdHlsZS5vdmVyZmxvdyA9ICdhdXRvJwogICAgICAgICAgfSwgMTApCiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIHNldFRleHRhcmVhICgpIHsKICAgICAgdGhpcy5NZEZpZWxkLnRleHRhcmVhID0gdHJ1ZQogICAgfSwKICAgIHNldEF1dG9ncm93ICgpIHsKICAgICAgdGhpcy5NZEZpZWxkLmF1dG9ncm93ID0gdGhpcy5tZEF1dG9ncm93CiAgICB9LAogICAgb25JbnB1dCAoKSB7CiAgICAgIHRoaXMuc2V0RmllbGRWYWx1ZSgpCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgbG9jYWxWYWx1ZSAoKSB7CiAgICAgIHRoaXMuYXBwbHlTdHlsZXMoKQogICAgfQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLnNldFRleHRhcmVhKCkKICAgIHRoaXMuc2V0QXV0b2dyb3coKQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLiRuZXh0VGljaygpLnRoZW4odGhpcy5hcHBseVN0eWxlcykKICB9LAogIGJlZm9yZURlc3Ryb3kgKCkgewogICAgdGhpcy5zZXRUZXh0YXJlYShmYWxzZSkKICB9Cn0pCg=="},{"version":3,"sources":["MdTextarea.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MdTextarea.vue","sourceRoot":"node_modules/vue-material/src/components/MdField/MdTextarea","sourcesContent":["<template>\n  <textarea\n    class=\"md-textarea\"\n    :style=\"textareaStyles\"\n    v-model=\"model\"\n    v-bind=\"attributes\"\n    v-on=\"listeners\"\n    @focus=\"onFocus\"\n    @blur=\"onBlur\">\n  </textarea>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdUuid from 'core/utils/MdUuid'\n  import MdFieldMixin from '../MdFieldMixin'\n\n  function calculateContentHeight (el, lineHeight) {\n    const origHeight = el.style.height\n    const height = el.offsetHeight\n    const scrollHeight = el.scrollHeight\n\n    el.style.overflow = 'hidden'\n\n    if (height >= scrollHeight) {\n      el.style.height = (height + lineHeight) + 'px'\n\n      if (scrollHeight < el.scrollHeight) {\n        el.style.height = origHeight\n\n        return height\n      }\n    }\n\n    return scrollHeight\n  }\n\n  export default new MdComponent({\n    name: 'MdTextarea',\n    mixins: [MdFieldMixin],\n    inject: ['MdField'],\n    props: {\n      id: {\n        type: String,\n        default: () => 'md-textarea-' + MdUuid()\n      },\n      mdAutogrow: Boolean\n    },\n    computed: {\n      listeners () {\n        return {\n          ...this.$listeners,\n          input: this.onInput\n        }\n      },\n      textareaStyles () {\n        return {\n          height: this.textareaHeight\n        }\n      }\n    },\n    methods: {\n      getTextAreaLineSize () {\n        const style = window.getComputedStyle(this.$el)\n\n        return parseInt(style.lineHeight, 10)\n      },\n      setTextAreaSize (height) {\n        let newHeight = height\n\n        if (!height) {\n          const size = this.getTextAreaLineSize()\n\n          newHeight = calculateContentHeight(this.$el, size)\n        }\n\n        this.textareaHeight = newHeight + 'px'\n      },\n      applyStyles () {\n        if (this.mdAutogrow) {\n          this.setTextAreaSize(32)\n          this.$nextTick().then(() => {\n            this.setTextAreaSize()\n            window.setTimeout(() => {\n              this.$el.style.overflow = 'auto'\n            }, 10)\n          })\n        }\n      },\n      setTextarea () {\n        this.MdField.textarea = true\n      },\n      setAutogrow () {\n        this.MdField.autogrow = this.mdAutogrow\n      },\n      onInput () {\n        this.setFieldValue()\n      }\n    },\n    watch: {\n      localValue () {\n        this.applyStyles()\n      }\n    },\n    created () {\n      this.setTextarea()\n      this.setAutogrow()\n    },\n    mounted () {\n      this.$nextTick().then(this.applyStyles)\n    },\n    beforeDestroy () {\n      this.setTextarea(false)\n    }\n  })\n</script>\n"]}]}