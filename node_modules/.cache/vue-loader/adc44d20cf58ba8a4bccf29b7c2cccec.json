{"remainingRequest":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdChips/MdChips.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-material/src/components/MdChips/MdChips.vue","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaiurban/Projekte/own_projects/vue-website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZENvbXBvbmVudCBmcm9tICdjb3JlL01kQ29tcG9uZW50JwppbXBvcnQgTWRGaWVsZCBmcm9tICdjb21wb25lbnRzL01kRmllbGQvTWRGaWVsZCcKaW1wb3J0IE1kSW5wdXQgZnJvbSAnY29tcG9uZW50cy9NZEZpZWxkL01kSW5wdXQvTWRJbnB1dCcKaW1wb3J0IE1kVXVpZCBmcm9tICdjb3JlL3V0aWxzL01kVXVpZCcKaW1wb3J0IE1kUHJvcFZhbGlkYXRvciBmcm9tICdjb3JlL3V0aWxzL01kUHJvcFZhbGlkYXRvcicKCmV4cG9ydCBkZWZhdWx0IG5ldyBNZENvbXBvbmVudCh7CiAgbmFtZTogJ01kQ2hpcHMnLAogIGNvbXBvbmVudHM6IHsKICAgIE1kRmllbGQsCiAgICBNZElucHV0CiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IEFycmF5LAogICAgaWQ6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogKCkgPT4gJ21kLWNoaXBzLScgKyBNZFV1aWQoKQogICAgfSwKICAgIG1kSW5wdXRUeXBlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgIC4uLk1kUHJvcFZhbGlkYXRvcignbWQtaW5wdXQtdHlwZScsIFsnZW1haWwnLCAnbnVtYmVyJywgJ3Bhc3N3b3JkJywgJ3NlYXJjaCcsICd0ZWwnLCAndGV4dCcsICd1cmwnXSkKICAgIH0sCiAgICBtZFBsYWNlaG9sZGVyOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgbWRTdGF0aWM6IEJvb2xlYW4sCiAgICBtZEF1dG9JbnNlcnQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtZExpbWl0OiBOdW1iZXIsCiAgICBtZENoZWNrRHVwbGljYXRlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIG1kRm9ybWF0OiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uCiAgICB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgaW5wdXRWYWx1ZTogJycsCiAgICBkdXBsaWNhdGVkQ2hpcDogbnVsbAogIH0pLAogIGNvbXB1dGVkOiB7CiAgICBjaGlwc0NsYXNzZXMgKCkgewogICAgICByZXR1cm4gewogICAgICAgICdtZC1oYXMtdmFsdWUnOiB0aGlzLnZhbHVlICYmIHRoaXMudmFsdWUubGVuZ3RoCiAgICAgIH0KICAgIH0sCgogICAgbW9kZWxSZXNwZWN0TGltaXQgKCkgewogICAgICByZXR1cm4gIXRoaXMubWRMaW1pdCB8fCB0aGlzLnZhbHVlLmxlbmd0aCA8IHRoaXMubWRMaW1pdAogICAgfSwKCiAgICBmb3JtYXR0ZWRJbnB1dFZhbHVlICgpIHsKICAgICAgaWYgKCF0aGlzLm1kRm9ybWF0KSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXRWYWx1ZQogICAgICB9CiAgICAgIHJldHVybiB0aGlzLm1kRm9ybWF0KHRoaXMuaW5wdXRWYWx1ZSkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluc2VydENoaXAgKHsgdGFyZ2V0IH0pIHsKICAgICAgbGV0IGlucHV0VmFsdWUgPSB0aGlzLmZvcm1hdHRlZElucHV0VmFsdWUKCiAgICAgIGlmICghaW5wdXRWYWx1ZSB8fCAhdGhpcy5tb2RlbFJlc3BlY3RMaW1pdCkgewogICAgICAgIHJldHVybgogICAgICB9CgogICAgICBpZiAodGhpcy52YWx1ZS5pbmNsdWRlcyhpbnB1dFZhbHVlKSkgewogICAgICAgIHRoaXMuZHVwbGljYXRlZENoaXAgPSBudWxsCiAgICAgICAgLy8gdG8gdHJpZ2dlciBhbmltYXRlCiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy5kdXBsaWNhdGVkQ2hpcCA9IGlucHV0VmFsdWUKICAgICAgICB9KQogICAgICAgIHJldHVybgogICAgICB9CgogICAgICB0aGlzLnZhbHVlLnB1c2goaW5wdXRWYWx1ZSkKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbHVlKQogICAgICB0aGlzLiRlbWl0KCdtZC1pbnNlcnQnLCBpbnB1dFZhbHVlKQogICAgICB0aGlzLmlucHV0VmFsdWUgPSAnJwogICAgfSwKICAgIHJlbW92ZUNoaXAgKGNoaXApIHsKICAgICAgY29uc3QgaW5kZXggPSB0aGlzLnZhbHVlLmluZGV4T2YoY2hpcCkKCiAgICAgIHRoaXMudmFsdWUuc3BsaWNlKGluZGV4LCAxKQogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHRoaXMudmFsdWUpCiAgICAgIHRoaXMuJGVtaXQoJ21kLWRlbGV0ZScsIGNoaXAsIGluZGV4KQogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB0aGlzLiRyZWZzLmlucHV0LiRlbC5mb2N1cygpKQogICAgfSwKICAgIGhhbmRsZUJhY2tSZW1vdmUgKCkgewogICAgICBpZiAoIXRoaXMuaW5wdXRWYWx1ZSkgewogICAgICAgIHRoaXMucmVtb3ZlQ2hpcCh0aGlzLnZhbHVlW3RoaXMudmFsdWUubGVuZ3RoIC0gMV0pCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVJbnB1dCAoKSB7CiAgICAgIGlmICh0aGlzLm1kQ2hlY2tEdXBsaWNhdGVkKSB7CiAgICAgICAgdGhpcy5jaGVja0R1cGxpY2F0ZWQoKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZHVwbGljYXRlZENoaXAgPSBudWxsCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVGb2N1c091dCAoeyB0YXJnZXQgfSkgewogICAgICBpZiAodGhpcy5tZEF1dG9JbnNlcnQpIHsKICAgICAgICB0aGlzLmluc2VydENoaXAodGFyZ2V0KQogICAgICB9CiAgICB9LAogICAgY2hlY2tEdXBsaWNhdGVkICgpIHsKICAgICAgaWYgKCF0aGlzLnZhbHVlLmluY2x1ZGVzKHRoaXMuZm9ybWF0dGVkSW5wdXRWYWx1ZSkpIHsKICAgICAgICB0aGlzLmR1cGxpY2F0ZWRDaGlwID0gbnVsbAogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CgogICAgICBpZiAoIXRoaXMubWRDaGVja0R1cGxpY2F0ZWQpIHsKICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgfQoKICAgICAgdGhpcy5kdXBsaWNhdGVkQ2hpcCA9IHRoaXMuZm9ybWF0dGVkSW5wdXRWYWx1ZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlICgpIHsKICAgICAgdGhpcy5jaGVja0R1cGxpY2F0ZWQoKQogICAgfQogIH0KfSkK"},{"version":3,"sources":["MdChips.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"MdChips.vue","sourceRoot":"node_modules/vue-material/src/components/MdChips","sourcesContent":["<template>\n  <md-field class=\"md-chips\" :class=\"[$mdActiveTheme, chipsClasses]\">\n    <slot />\n\n    <md-chip\n      v-for=\"(chip, key) in value\"\n      :key=\"chip\"\n      :md-deletable=\"!mdStatic\"\n      :md-clickable=\"!mdStatic\"\n      :md-duplicated=\"duplicatedChip === chip\"\n      @keydown.enter=\"$emit('md-click', chip, key)\"\n      @click.native=\"$emit('md-click', chip, key)\"\n      @md-delete.stop=\"removeChip(chip)\">\n      <slot name=\"md-chip\" :chip=\"chip\" v-if=\"$scopedSlots['md-chip']\">{{ chip }}</slot>\n      <template v-else>{{ chip }}</template>\n    </md-chip>\n\n    <md-input\n      ref=\"input\"\n      v-model.trim=\"inputValue\"\n      v-if=\"!mdStatic && modelRespectLimit\"\n      :type=\"mdInputType\"\n      :id=\"id\"\n      :placeholder=\"mdPlaceholder\"\n      @input=\"handleInput\"\n      @keydown.enter=\"insertChip\"\n      @keydown.8=\"handleBackRemove\"\n      @focusout=\"handleFocusOut\">\n    </md-input>\n  </md-field>\n</template>\n\n<script>\n  import MdComponent from 'core/MdComponent'\n  import MdField from 'components/MdField/MdField'\n  import MdInput from 'components/MdField/MdInput/MdInput'\n  import MdUuid from 'core/utils/MdUuid'\n  import MdPropValidator from 'core/utils/MdPropValidator'\n\n  export default new MdComponent({\n    name: 'MdChips',\n    components: {\n      MdField,\n      MdInput\n    },\n    props: {\n      value: Array,\n      id: {\n        type: [String, Number],\n        default: () => 'md-chips-' + MdUuid()\n      },\n      mdInputType: {\n        type: [String, Number],\n        ...MdPropValidator('md-input-type', ['email', 'number', 'password', 'search', 'tel', 'text', 'url'])\n      },\n      mdPlaceholder: [String, Number],\n      mdStatic: Boolean,\n      mdAutoInsert: {\n        type: Boolean,\n        default: false\n      },\n      mdLimit: Number,\n      mdCheckDuplicated: {\n        type: Boolean,\n        default: false\n      },\n      mdFormat: {\n        type: Function\n      }\n    },\n    data: () => ({\n      inputValue: '',\n      duplicatedChip: null\n    }),\n    computed: {\n      chipsClasses () {\n        return {\n          'md-has-value': this.value && this.value.length\n        }\n      },\n\n      modelRespectLimit () {\n        return !this.mdLimit || this.value.length < this.mdLimit\n      },\n\n      formattedInputValue () {\n        if (!this.mdFormat) {\n          return this.inputValue\n        }\n        return this.mdFormat(this.inputValue)\n      }\n    },\n    methods: {\n      insertChip ({ target }) {\n        let inputValue = this.formattedInputValue\n\n        if (!inputValue || !this.modelRespectLimit) {\n          return\n        }\n\n        if (this.value.includes(inputValue)) {\n          this.duplicatedChip = null\n          // to trigger animate\n          this.$nextTick(() => {\n            this.duplicatedChip = inputValue\n          })\n          return\n        }\n\n        this.value.push(inputValue)\n        this.$emit('input', this.value)\n        this.$emit('md-insert', inputValue)\n        this.inputValue = ''\n      },\n      removeChip (chip) {\n        const index = this.value.indexOf(chip)\n\n        this.value.splice(index, 1)\n        this.$emit('input', this.value)\n        this.$emit('md-delete', chip, index)\n        this.$nextTick(() => this.$refs.input.$el.focus())\n      },\n      handleBackRemove () {\n        if (!this.inputValue) {\n          this.removeChip(this.value[this.value.length - 1])\n        }\n      },\n      handleInput () {\n        if (this.mdCheckDuplicated) {\n          this.checkDuplicated()\n        } else {\n          this.duplicatedChip = null\n        }\n      },\n      handleFocusOut ({ target }) {\n        if (this.mdAutoInsert) {\n          this.insertChip(target)\n        }\n      },\n      checkDuplicated () {\n        if (!this.value.includes(this.formattedInputValue)) {\n          this.duplicatedChip = null\n          return false\n        }\n\n        if (!this.mdCheckDuplicated) {\n          return false\n        }\n\n        this.duplicatedChip = this.formattedInputValue\n      }\n    },\n    watch: {\n      value () {\n        this.checkDuplicated()\n      }\n    }\n  })\n</script>\n\n<style lang=\"scss\">\n  @import \"~components/MdAnimation/variables\";\n\n  .md-chips.md-field {\n    padding-top: 12px;\n    flex-wrap: wrap;\n\n    &.md-has-value {\n      label {\n        top: -6px;\n      }\n    }\n\n    .md-chip {\n      margin-bottom: 4px;\n\n      &:last-of-type {\n        margin-right: 8px;\n      }\n    }\n\n    .md-input {\n      min-width: 128px;\n    }\n  }\n</style>\n"]}]}